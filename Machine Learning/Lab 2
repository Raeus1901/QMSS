{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "name": "Lab 2"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Part 1: Regression on California Test Scores"
      ],
      "metadata": {
        "id": "zvQawdEGpyXF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "1. Find the url for the California Test Score Data Set from the following website:\n",
        "\n"
      ],
      "metadata": {
        "id": "uOtVWwLwp573"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "-BEQgf2Zo_p6"
      },
      "outputs": [],
      "source": [
        "#Import Python Libraries\n",
        "import numpy as np\n",
        "import scipy as sp\n",
        "import pandas as pd\n",
        "import matplotlib as mpl\n",
        "import seaborn as sns\n",
        "import sklearn as skl"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "cali_df = pd.read_csv(\"https://vincentarelbundock.github.io/Rdatasets/csv/Ecdat/Caschool.csv\")\n"
      ],
      "metadata": {
        "id": "Wt6hG-aXqr4P"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "cali_df.dtypes\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VCufThMg40wp",
        "outputId": "3cea170e-9b29-4eba-f589-52aec758e4ff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "rownames      int64\n",
              "distcod       int64\n",
              "county       object\n",
              "district     object\n",
              "grspan       object\n",
              "enrltot       int64\n",
              "teachers    float64\n",
              "calwpct     float64\n",
              "mealpct     float64\n",
              "computer      int64\n",
              "testscr     float64\n",
              "compstu     float64\n",
              "expnstu     float64\n",
              "str         float64\n",
              "avginc      float64\n",
              "elpct       float64\n",
              "readscr     float64\n",
              "mathscr     float64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 87
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "%matplotlib inline\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "# Univariate distribution of the target feature: testscr\n",
        "sns.histplot(cali_df['testscr'], kde=True)\n",
        "plt.title('Average test score performance for 5th grade Californians')\n",
        "plt.show()\n",
        "\n",
        "variables =  ['avginc', 'str', 'enrltot']\n",
        "\n",
        "for var in variables:\n",
        "    sns.histplot(cali_df[var], kde=True)\n",
        "    description = {\n",
        "        'avginc': 'Average Income in K',\n",
        "        'str': 'Student-Teacher Ratio',\n",
        "        'enrltot': 'Total Enrollment'\n",
        "    }\n",
        "    plt.title(f'Distribution of {description[var]}')\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "kZ1WLYaS9GEC",
        "outputId": "01b316b0-5f64-4e9b-a563-b4e79a223306"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.2 Visualize the dependency of the target on each feature from 1.1."
      ],
      "metadata": {
        "id": "pXLogABKurA4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "%matplotlib inline\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "variables =  ['avginc', 'str', 'enrltot']\n",
        "\n",
        "\n",
        "for var in variables:\n",
        "  plt.figure(figsize=(10, 6))\n",
        "  sns.regplot(x=cali_df[var], y=cali_df['testscr'])\n",
        "  plt.title(f'Relationship between Test Score and {description[var]} with Regression Line')\n",
        "  plt.xlabel(description[var])\n",
        "  plt.ylabel('Test Score')\n",
        "  plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "y7Hp2VFKuw24",
        "outputId": "54e3b4d0-528a-4fcb-840a-d627111d4e29"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "There is notable positive relationship associated with higher income causing better test score. Relationship seems more accurate than others given a smaller fit and clear 45° degree line. The two others are more problematic due to possible overfit given larger space, and an unclear direction for the line.  "
      ],
      "metadata": {
        "id": "SGLbk7p9n4e5"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.3 Split data in training and test set. Build models that evaluate the relationship between all available X variables in the California test dataset and the target variable. Evaluate KNN for regression, Linear Regression (OLS), Ridge, and Lasso using cross-validation with the default parameters. Does scaling the data with the StandardScaler help?"
      ],
      "metadata": {
        "id": "BY5dhm9cwJ0n"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "First, let's clean the data. We separate the target features (and its extension), as we remove the object type columns given that the program can only load float (numerical) values."
      ],
      "metadata": {
        "id": "oYh8Ju36oYru"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from sklearn.model_selection import train_test_split\n",
        "\n",
        "# Assuming X is your feature matrix and y is the target vector\n",
        "\n",
        "# I remove all the objects columns + the variables affecting the target\n",
        "X = pd.get_dummies(cali_df, columns=['county', 'district', 'grspan']).drop(columns=['readscr', 'mathscr', 'testscr'])\n",
        "y = cali_df['testscr']\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)\n",
        "\n",
        "print(y[0:10])\n",
        "X_train.head()\n"
      ],
      "metadata": {
        "id": "UYy8nrM3zxMU",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 487
        },
        "outputId": "3ad17210-46ad-41b7-ca8d-477cbe439466"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    690.799988\n",
            "1    661.200012\n",
            "2    643.599976\n",
            "3    647.700012\n",
            "4    640.849976\n",
            "5    605.550049\n",
            "6    606.750000\n",
            "7    609.000000\n",
            "8    612.500000\n",
            "9    612.650024\n",
            "Name: testscr, dtype: float64\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     rownames  distcod  enrltot    teachers    calwpct    mealpct  computer  \\\n",
              "3           4    61457      243   14.000000  36.475399  77.049202        85   \n",
              "18         19    64709     6880  303.029999  21.282400  94.971199       960   \n",
              "393       394    69757      141    6.910000  10.071900   9.352500        44   \n",
              "60         61    72157      723   37.119999  25.921101  83.157898        45   \n",
              "203       204    68551      307   15.850000   5.537500  28.664499        36   \n",
              "\n",
              "      compstu      expnstu        str  ...  district_Wilsona Elementary  \\\n",
              "3    0.349794  7101.831055  17.357143  ...                            0   \n",
              "18   0.139535  5064.615723  22.704023  ...                            0   \n",
              "393  0.312057  6060.256836  20.405210  ...                            0   \n",
              "60   0.062241  4692.493652  19.477371  ...                            0   \n",
              "203  0.117264  4718.163086  19.369085  ...                            0   \n",
              "\n",
              "     district_Winton Elementary  district_Wiseburn Elementary  \\\n",
              "3                             0                             0   \n",
              "18                            0                             0   \n",
              "393                           0                             0   \n",
              "60                            0                             0   \n",
              "203                           0                             0   \n",
              "\n",
              "     district_Woodlake Union Elementary  district_Woodside Elementary  \\\n",
              "3                                     0                             0   \n",
              "18                                    0                             0   \n",
              "393                                   0                             0   \n",
              "60                                    0                             0   \n",
              "203                                   0                             0   \n",
              "\n",
              "     district_Woodville Elementary  district_Wright Elementary  \\\n",
              "3                                0                           0   \n",
              "18                               0                           0   \n",
              "393                              0                           0   \n",
              "60                               0                           0   \n",
              "203                              0                           0   \n",
              "\n",
              "     district_Yreka Union Elementary  grspan_KK-06  grspan_KK-08  \n",
              "3                                  0             0             1  \n",
              "18                                 0             0             1  \n",
              "393                                0             1             0  \n",
              "60                                 0             0             1  \n",
              "203                                0             0             1  \n",
              "\n",
              "[5 rows x 468 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-4702f170-04dd-4f7f-9f8b-6882d633cb25\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>rownames</th>\n",
              "      <th>distcod</th>\n",
              "      <th>enrltot</th>\n",
              "      <th>teachers</th>\n",
              "      <th>calwpct</th>\n",
              "      <th>mealpct</th>\n",
              "      <th>computer</th>\n",
              "      <th>compstu</th>\n",
              "      <th>expnstu</th>\n",
              "      <th>str</th>\n",
              "      <th>...</th>\n",
              "      <th>district_Wilsona Elementary</th>\n",
              "      <th>district_Winton Elementary</th>\n",
              "      <th>district_Wiseburn Elementary</th>\n",
              "      <th>district_Woodlake Union Elementary</th>\n",
              "      <th>district_Woodside Elementary</th>\n",
              "      <th>district_Woodville Elementary</th>\n",
              "      <th>district_Wright Elementary</th>\n",
              "      <th>district_Yreka Union Elementary</th>\n",
              "      <th>grspan_KK-06</th>\n",
              "      <th>grspan_KK-08</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>61457</td>\n",
              "      <td>243</td>\n",
              "      <td>14.000000</td>\n",
              "      <td>36.475399</td>\n",
              "      <td>77.049202</td>\n",
              "      <td>85</td>\n",
              "      <td>0.349794</td>\n",
              "      <td>7101.831055</td>\n",
              "      <td>17.357143</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>19</td>\n",
              "      <td>64709</td>\n",
              "      <td>6880</td>\n",
              "      <td>303.029999</td>\n",
              "      <td>21.282400</td>\n",
              "      <td>94.971199</td>\n",
              "      <td>960</td>\n",
              "      <td>0.139535</td>\n",
              "      <td>5064.615723</td>\n",
              "      <td>22.704023</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>393</th>\n",
              "      <td>394</td>\n",
              "      <td>69757</td>\n",
              "      <td>141</td>\n",
              "      <td>6.910000</td>\n",
              "      <td>10.071900</td>\n",
              "      <td>9.352500</td>\n",
              "      <td>44</td>\n",
              "      <td>0.312057</td>\n",
              "      <td>6060.256836</td>\n",
              "      <td>20.405210</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>60</th>\n",
              "      <td>61</td>\n",
              "      <td>72157</td>\n",
              "      <td>723</td>\n",
              "      <td>37.119999</td>\n",
              "      <td>25.921101</td>\n",
              "      <td>83.157898</td>\n",
              "      <td>45</td>\n",
              "      <td>0.062241</td>\n",
              "      <td>4692.493652</td>\n",
              "      <td>19.477371</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>203</th>\n",
              "      <td>204</td>\n",
              "      <td>68551</td>\n",
              "      <td>307</td>\n",
              "      <td>15.850000</td>\n",
              "      <td>5.537500</td>\n",
              "      <td>28.664499</td>\n",
              "      <td>36</td>\n",
              "      <td>0.117264</td>\n",
              "      <td>4718.163086</td>\n",
              "      <td>19.369085</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 468 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-4702f170-04dd-4f7f-9f8b-6882d633cb25')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-4702f170-04dd-4f7f-9f8b-6882d633cb25 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-4702f170-04dd-4f7f-9f8b-6882d633cb25');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-08397b72-0f30-4726-9af3-ddcfa464108d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-08397b72-0f30-4726-9af3-ddcfa464108d')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-08397b72-0f30-4726-9af3-ddcfa464108d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 90
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.neighbors import KNeighborsRegressor\n",
        "\n",
        "knn = KNeighborsRegressor(n_neighbors=10)\n",
        "knn.fit(X_train, y_train)\n",
        "\n",
        "#Print accuracy rounded to two digits to the right of decimal\n",
        "print(knn.score(X_test, y_test))\n",
        "y_pred = knn.predict(X_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YGajKxV1847T",
        "outputId": "f0228c70-00b4-4dae-fd9b-87d04d602fe6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.2665192801985329\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Low Knn, could be better"
      ],
      "metadata": {
        "id": "VR-zldS-olqB"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n",
        "import statsmodels.api as sm\n",
        "\n",
        "X_train_new = sm.add_constant(X_train)\n",
        "\n",
        "model = sm.OLS(y_train, X_train_new).fit()\n",
        "print(model.summary())"
      ],
      "metadata": {
        "id": "NVGz3Blg3mJ4",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "c7ab2d99-a1e5-4956-eca0-4fd7ed22e6a6"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                testscr   R-squared:                       1.000\n",
            "Model:                            OLS   Adj. R-squared:                    nan\n",
            "Method:                 Least Squares   F-statistic:                       nan\n",
            "Date:                Sat, 14 Oct 2023   Prob (F-statistic):                nan\n",
            "Time:                        02:43:56   Log-Likelihood:                 6020.5\n",
            "No. Observations:                 315   AIC:                        -1.141e+04\n",
            "Df Residuals:                       0   BIC:                        -1.023e+04\n",
            "Df Model:                         314                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "====================================================================================================================\n",
            "                                                       coef    std err          t      P>|t|      [0.025      0.975]\n",
            "--------------------------------------------------------------------------------------------------------------------\n",
            "const                                               71.7122        inf          0        nan         nan         nan\n",
            "rownames                                             0.1580        inf          0        nan         nan         nan\n",
            "distcod                                              0.0055        inf          0        nan         nan         nan\n",
            "enrltot                                             -0.0062        inf         -0        nan         nan         nan\n",
            "teachers                                             0.1449        inf          0        nan         nan         nan\n",
            "calwpct                                              0.0026        inf          0        nan         nan         nan\n",
            "mealpct                                              0.0623        inf          0        nan         nan         nan\n",
            "computer                                            -0.0064        inf         -0        nan         nan         nan\n",
            "compstu                                             16.4661        inf          0        nan         nan         nan\n",
            "expnstu                                              0.0079        inf          0        nan         nan         nan\n",
            "str                                                  4.1452        inf          0        nan         nan         nan\n",
            "avginc                                               0.6113        inf          0        nan         nan         nan\n",
            "elpct                                                0.0589        inf          0        nan         nan         nan\n",
            "county_Alameda                                    3.324e-13        inf          0        nan         nan         nan\n",
            "county_Butte                                        45.0412        inf          0        nan         nan         nan\n",
            "county_Calaveras                                    13.2509        inf          0        nan         nan         nan\n",
            "county_Contra Costa                                 27.4603        inf          0        nan         nan         nan\n",
            "county_El Dorado                                    20.6141        inf          0        nan         nan         nan\n",
            "county_Fresno                                       29.6485        inf          0        nan         nan         nan\n",
            "county_Glenn                                        24.3641        inf          0        nan         nan         nan\n",
            "county_Humboldt                                     29.1006        inf          0        nan         nan         nan\n",
            "county_Imperial                                     18.1817        inf          0        nan         nan         nan\n",
            "county_Inyo                                         10.7740        inf          0        nan         nan         nan\n",
            "county_Kern                                         19.3806        inf          0        nan         nan         nan\n",
            "county_Kings                                        22.3536        inf          0        nan         nan         nan\n",
            "county_Lake                                         15.1449        inf          0        nan         nan         nan\n",
            "county_Lassen                                       14.3939        inf          0        nan         nan         nan\n",
            "county_Los Angeles                                  11.6619        inf          0        nan         nan         nan\n",
            "county_Madera                                        0.6451        inf          0        nan         nan         nan\n",
            "county_Marin                                        -1.2388        inf         -0        nan         nan         nan\n",
            "county_Mendocino                                     3.3489        inf          0        nan         nan         nan\n",
            "county_Merced                                        4.2322        inf          0        nan         nan         nan\n",
            "county_Monterey                                      4.9978        inf          0        nan         nan         nan\n",
            "county_Nevada                                        2.4318        inf          0        nan         nan         nan\n",
            "county_Orange                                        0.3782        inf          0        nan         nan         nan\n",
            "county_Placer                                       -3.2771        inf         -0        nan         nan         nan\n",
            "county_Riverside                                     2.1065        inf          0        nan         nan         nan\n",
            "county_Sacramento                                    4.9078        inf          0        nan         nan         nan\n",
            "county_San Benito                                    5.6653        inf          0        nan         nan         nan\n",
            "county_San Bernardino                               -9.3955        inf         -0        nan         nan         nan\n",
            "county_San Diego                                   -11.3113        inf         -0        nan         nan         nan\n",
            "county_San Joaquin                                  -2.6006        inf         -0        nan         nan         nan\n",
            "county_San Luis Obispo                            2.731e-14        inf          0        nan         nan         nan\n",
            "county_San Mateo                                   -11.5168        inf         -0        nan         nan         nan\n",
            "county_Santa Barbara                               -10.6959        inf         -0        nan         nan         nan\n",
            "county_Santa Clara                                 -18.2199        inf         -0        nan         nan         nan\n",
            "county_Santa Cruz                                  -12.0765        inf         -0        nan         nan         nan\n",
            "county_Shasta                                      -12.3776        inf         -0        nan         nan         nan\n",
            "county_Siskiyou                                     -4.2829        inf         -0        nan         nan         nan\n",
            "county_Sonoma                                      -14.3848        inf         -0        nan         nan         nan\n",
            "county_Stanislaus                                  -11.9829        inf         -0        nan         nan         nan\n",
            "county_Sutter                                      -12.5781        inf         -0        nan         nan         nan\n",
            "county_Tehama                                      -14.6361        inf         -0        nan         nan         nan\n",
            "county_Trinity                                    3.344e-15        inf          0        nan         nan         nan\n",
            "county_Tulare                                      -26.5593        inf         -0        nan         nan         nan\n",
            "county_Tuolumne                                    -17.0634        inf         -0        nan         nan         nan\n",
            "county_Ventura                                     -30.5076        inf         -0        nan         nan         nan\n",
            "county_Yuba                                        -33.6668        inf         -0        nan         nan         nan\n",
            "district_Ackerman Elementary                      3.452e-15        inf          0        nan         nan         nan\n",
            "district_Adelanto Elementary                     -1.065e-14        inf         -0        nan         nan         nan\n",
            "district_Alexander Valley Union Elementary           2.4552        inf          0        nan         nan         nan\n",
            "district_Alisal Union Elementary                    -2.5829        inf         -0        nan         nan         nan\n",
            "district_Allensworth Elementary                    -18.1741        inf         -0        nan         nan         nan\n",
            "district_Alpine Union Elementary                 -4.754e-15        inf         -0        nan         nan         nan\n",
            "district_Alta Loma Elementary                        1.5200        inf          0        nan         nan         nan\n",
            "district_Alta Vista Elementary                     -16.0154        inf         -0        nan         nan         nan\n",
            "district_Alta-Dutch Flat Union Elementary            8.6020        inf          0        nan         nan         nan\n",
            "district_Alum Rock Union Elementary               -4.85e-15        inf         -0        nan         nan         nan\n",
            "district_Alview-Dairyland Union Elementary          15.2270        inf          0        nan         nan         nan\n",
            "district_Alvina Elementary                          12.7658        inf          0        nan         nan         nan\n",
            "district_American Union Elementary                   8.6265        inf          0        nan         nan         nan\n",
            "district_Anaheim Elementary                          1.4518        inf          0        nan         nan         nan\n",
            "district_Antelope Elementary                        -0.4778        inf         -0        nan         nan         nan\n",
            "district_Arcata Elementary                          -4.3610        inf         -0        nan         nan         nan\n",
            "district_Arcohe Union Elementary                     3.4370        inf          0        nan         nan         nan\n",
            "district_Arena Union Elementary                      3.3489        inf          0        nan         nan         nan\n",
            "district_Armona Union Elementary                     3.2494        inf          0        nan         nan         nan\n",
            "district_Arvin Union Elementary                      1.8019        inf          0        nan         nan         nan\n",
            "district_Atwater Elementary                       3.362e-16        inf          0        nan         nan         nan\n",
            "district_Auburn Union Elementary                     1.1282        inf          0        nan         nan         nan\n",
            "district_Bakersfield City Elementary               -13.8794        inf         -0        nan         nan         nan\n",
            "district_Ballard Elementary                         -5.4096        inf         -0        nan         nan         nan\n",
            "district_Ballico-Cressey Elementary                 -1.3419        inf         -0        nan         nan         nan\n",
            "district_Bangor Union Elementary                  -1.96e-15        inf         -0        nan         nan         nan\n",
            "district_Banta Elementary                        -1.998e-17        inf         -0        nan         nan         nan\n",
            "district_Bass Lake Joint Elementary                 10.8382        inf          0        nan         nan         nan\n",
            "district_Bayshore Elementary                     -8.701e-16        inf         -0        nan         nan         nan\n",
            "district_Beardsley Elementary                        7.2703        inf          0        nan         nan         nan\n",
            "district_Bella Vista Elementary                  -3.776e-15        inf         -0        nan         nan         nan\n",
            "district_Bellevue Union Elementary                  -6.2773        inf         -0        nan         nan         nan\n",
            "district_Belmont-Redwood Shores Elementary          -3.0340        inf         -0        nan         nan         nan\n",
            "district_Bennett Valley Union Elementary            -2.6310        inf         -0        nan         nan         nan\n",
            "district_Berryessa Union Elementary                  0.5834        inf          0        nan         nan         nan\n",
            "district_Big Springs Union Elementary                6.3320        inf          0        nan         nan         nan\n",
            "district_Bishop Union Elementary                    10.7740        inf          0        nan         nan         nan\n",
            "district_Black Butte Union Elementary                7.3885        inf          0        nan         nan         nan\n",
            "district_Blue Lake Union Elementary                  8.2172        inf          0        nan         nan         nan\n",
            "district_Bonny Doon Union Elementary                10.1946        inf          0        nan         nan         nan\n",
            "district_Bonsall Union Elementary                   -1.6031        inf         -0        nan         nan         nan\n",
            "district_Brawley Elementary                          6.0843        inf          0        nan         nan         nan\n",
            "district_Brentwood Union Elementary                  7.6821        inf          0        nan         nan         nan\n",
            "district_Briggs Elementary                           5.3708        inf          0        nan         nan         nan\n",
            "district_Brisbane Elementary                         4.1411        inf          0        nan         nan         nan\n",
            "district_Brittan Elementary                         -0.8518        inf         -0        nan         nan         nan\n",
            "district_Browns Elementary                          -1.4957        inf         -0        nan         nan         nan\n",
            "district_Buckeye Union Elementary                    7.4394        inf          0        nan         nan         nan\n",
            "district_Buellton Union Elementary                   1.2553        inf          0        nan         nan         nan\n",
            "district_Buena Park Elementary                       1.1830        inf          0        nan         nan         nan\n",
            "district_Buena Vista Elementary                     -6.5942        inf         -0        nan         nan         nan\n",
            "district_Burlingame Elementary                      -4.7152        inf         -0        nan         nan         nan\n",
            "district_Burrel Union Elementary                 -4.367e-15        inf         -0        nan         nan         nan\n",
            "district_Burton Elementary                        5.609e-15        inf          0        nan         nan         nan\n",
            "district_Buttonwillow Union Elementary            3.828e-15        inf          0        nan         nan         nan\n",
            "district_Cajon Valley Union Elementary               3.8214        inf          0        nan         nan         nan\n",
            "district_Cambrian Elementary                        2.5e-15        inf          0        nan         nan         nan\n",
            "district_Camino Union Elementary                    22.0984        inf          0        nan         nan         nan\n",
            "district_Campbell Union Elementary                  -0.7714        inf         -0        nan         nan         nan\n",
            "district_Capay Joint Union Elementary               16.4947        inf          0        nan         nan         nan\n",
            "district_Cardiff Elementary                      -5.617e-15        inf         -0        nan         nan         nan\n",
            "district_Cascade Union Elementary                   -0.9998        inf         -0        nan         nan         nan\n",
            "district_Castaic Union Elementary                    1.8929        inf          0        nan         nan         nan\n",
            "district_Cayucos Elementary                       3.378e-16        inf          0        nan         nan         nan\n",
            "district_Central Elementary                          7.5579        inf          0        nan         nan         nan\n",
            "district_Central Union Elementary                  -12.0239        inf         -0        nan         nan         nan\n",
            "district_Centralia Elementary                        3.7632        inf          0        nan         nan         nan\n",
            "district_Chatom Union Elementary                    -2.4776        inf         -0        nan         nan         nan\n",
            "district_Chawanakee Jt. Elementary                 -51.3389        inf         -0        nan         nan         nan\n",
            "district_Chicago Park Elementary                 -4.072e-15        inf         -0        nan         nan         nan\n",
            "district_Chowchilla Elementary                      11.5926        inf          0        nan         nan         nan\n",
            "district_Chula Vista Elementary                     10.5542        inf          0        nan         nan         nan\n",
            "district_Cinnabar Elementary                         2.6858        inf          0        nan         nan         nan\n",
            "district_Clay Joint Elementary                      -1.5767        inf         -0        nan         nan         nan\n",
            "district_Clear Creek Elementary                     -4.9245        inf         -0        nan         nan         nan\n",
            "district_Coarsegold Union Elementary                14.3262        inf          0        nan         nan         nan\n",
            "district_Cold Spring Elementary                   4.985e-15        inf          0        nan         nan         nan\n",
            "district_Colfax Elementary                           9.2087        inf          0        nan         nan         nan\n",
            "district_College Elementary                      -3.663e-15        inf         -0        nan         nan         nan\n",
            "district_Columbia Elementary                       1.14e-17        inf          0        nan         nan         nan\n",
            "district_Columbia Union Elementary                  -4.7905        inf         -0        nan         nan         nan\n",
            "district_Columbine Elementary                    -1.813e-15        inf         -0        nan         nan         nan\n",
            "district_Corning Union Elementary                   -4.0792        inf         -0        nan         nan         nan\n",
            "district_Cottonwood Union Elementary             -2.785e-15        inf         -0        nan         nan         nan\n",
            "district_Cucamonga Elementary                     5.152e-15        inf          0        nan         nan         nan\n",
            "district_Cuddeback Union Elementary                 10.5091        inf          0        nan         nan         nan\n",
            "district_Cupertino Union Elementary                  7.2991        inf          0        nan         nan         nan\n",
            "district_Curtis Creek Elementary                    -0.9945        inf         -0        nan         nan         nan\n",
            "district_Cutten Elementary                           5.7956        inf          0        nan         nan         nan\n",
            "district_Cypress Elementary                       5.655e-15        inf          0        nan         nan         nan\n",
            "district_Dehesa Elementary                          -4.9988        inf         -0        nan         nan         nan\n",
            "district_Del Mar Union Elementary                   10.8616        inf          0        nan         nan         nan\n",
            "district_Del Paso Heights Elementary             -1.554e-15        inf         -0        nan         nan         nan\n",
            "district_Delano Union Elementary                    -3.1355        inf         -0        nan         nan         nan\n",
            "district_Di Giorgio Elementary                   -2.494e-15        inf         -0        nan         nan         nan\n",
            "district_Dixie Elementary                           14.6371        inf          0        nan         nan         nan\n",
            "district_Douglas City Elementary                  3.696e-15        inf          0        nan         nan         nan\n",
            "district_Dunham Elementary                          -5.3493        inf         -0        nan         nan         nan\n",
            "district_Dunsmuir Elementary                         1.2458        inf          0        nan         nan         nan\n",
            "district_East Whittier City Elementary               2.8527        inf          0        nan         nan         nan\n",
            "district_Eastside Union Elementary               -1.087e-15        inf         -0        nan         nan         nan\n",
            "district_Edison Elementary                           5.4743        inf          0        nan         nan         nan\n",
            "district_El Centro Elementary                     3.862e-15        inf          0        nan         nan         nan\n",
            "district_El Monte City Elementary                    1.0285        inf          0        nan         nan         nan\n",
            "district_El Nido Elementary                          3.9862        inf          0        nan         nan         nan\n",
            "district_Elverta Joint Elementary                 -1.98e-15        inf         -0        nan         nan         nan\n",
            "district_Encinitas Union Elementary              -1.348e-15        inf         -0        nan         nan         nan\n",
            "district_Enterprise Elementary                       2.1334        inf          0        nan         nan         nan\n",
            "district_Escondido Union Elementary                  2.4727        inf          0        nan         nan         nan\n",
            "district_Etiwanda Elementary                         9.2959        inf          0        nan         nan         nan\n",
            "district_Etna Union Elementary                       3.2110        inf          0        nan         nan         nan\n",
            "district_Evergreen Elementary                        6.3861        inf          0        nan         nan         nan\n",
            "district_Evergreen Union Elementary                 -0.7124        inf         -0        nan         nan         nan\n",
            "district_Exeter Union Elementary                    11.4897        inf          0        nan         nan         nan\n",
            "district_Fairfax Elementary                        7.44e-15        inf          0        nan         nan         nan\n",
            "district_Fieldbrook Elementary                      -1.7587        inf         -0        nan         nan         nan\n",
            "district_Foresthill Union Elementary                 2.4952        inf          0        nan         nan         nan\n",
            "district_Forestville Union Elementary               -6.2349        inf         -0        nan         nan         nan\n",
            "district_Fort Jones Union Elementary                -2.8451        inf         -0        nan         nan         nan\n",
            "district_Fort Ross Elementary                       -9.4828        inf         -0        nan         nan         nan\n",
            "district_Fortuna Union Elementary                    2.5968        inf          0        nan         nan         nan\n",
            "district_Fountain Valley Elementary                 -1.7974        inf         -0        nan         nan         nan\n",
            "district_Franklin Elementary                         1.3651        inf          0        nan         nan         nan\n",
            "district_Franklin-McKinley Elementary                3.0571        inf          0        nan         nan         nan\n",
            "district_Freshwater Elementary                     -11.3823        inf         -0        nan         nan         nan\n",
            "district_Fruitvale Elementary                        3.0191        inf          0        nan         nan         nan\n",
            "district_Fullerton Elementary                        2.8433        inf          0        nan         nan         nan\n",
            "district_Galt Joint Union Elementary                 3.3783        inf          0        nan         nan         nan\n",
            "district_Garvey Elementary                           2.8917        inf          0        nan         nan         nan\n",
            "district_General Shafter Elementary              -2.961e-15        inf         -0        nan         nan         nan\n",
            "district_Gerber Union Elementary                     1.0693        inf          0        nan         nan         nan\n",
            "district_Gold Oak Union Elementary                  12.0649        inf          0        nan         nan         nan\n",
            "district_Gold Trail Union Elementary                 9.7218        inf          0        nan         nan         nan\n",
            "district_Golden Feather Union Elementary             9.0370        inf          0        nan         nan         nan\n",
            "district_Goleta Union Elementary                    -0.0613        inf         -0        nan         nan         nan\n",
            "district_Grant Elementary                            4.7355        inf          0        nan         nan         nan\n",
            "district_Grass Valley Elementary                   2.62e-16        inf          0        nan         nan         nan\n",
            "district_Gratton Elementary                          3.3741        inf          0        nan         nan         nan\n",
            "district_Gravenstein Union Elementary               -3.9090        inf         -0        nan         nan         nan\n",
            "district_Greenfield Union Elementary                 9.9002        inf          0        nan         nan         nan\n",
            "district_Guadalupe Union Elementary                 12.0471        inf          0        nan         nan         nan\n",
            "district_Guerneville Elementary                  -6.098e-16        inf         -0        nan         nan         nan\n",
            "district_Hanford Elementary                         -7.2852        inf         -0        nan         nan         nan\n",
            "district_Happy Valley Elementary                    -7.0017        inf         -0        nan         nan         nan\n",
            "district_Happy Valley Union Elementary            2.933e-15        inf          0        nan         nan         nan\n",
            "district_Harmony Union Elementary                   -4.1219        inf         -0        nan         nan         nan\n",
            "district_Hawthorne Elementary                        0.8924        inf          0        nan         nan         nan\n",
            "district_Helendale Elementary                        6.5599        inf          0        nan         nan         nan\n",
            "district_Hermosa Beach City Elementary              -5.9069        inf         -0        nan         nan         nan\n",
            "district_Hillsborough City Elementary              4.82e-15        inf          0        nan         nan         nan\n",
            "district_Hollister School District                  -3.8608        inf         -0        nan         nan         nan\n",
            "district_Holt Union Elementary                     -18.3105        inf         -0        nan         nan         nan\n",
            "district_Hope Elementary                            -4.3226        inf         -0        nan         nan         nan\n",
            "district_Hueneme Elementary                          1.1641        inf          0        nan         nan         nan\n",
            "district_Hughes-Elizabeth Lakes Union Elementary     1.0576        inf          0        nan         nan         nan\n",
            "district_Huntington Beach City Elementary           -3.5041        inf         -0        nan         nan         nan\n",
            "district_Hydesville Elementary                      -0.8689        inf         -0        nan         nan         nan\n",
            "district_Island Union Elementary                    -5.1722        inf         -0        nan         nan         nan\n",
            "district_Jacoby Creek Elementary                     0.8414        inf          0        nan         nan         nan\n",
            "district_Jamestown Elementary                     1.518e-15        inf          0        nan         nan         nan\n",
            "district_Jamul-Dulzura Union Elementary              7.4220        inf          0        nan         nan         nan\n",
            "district_Janesville Union Elementary                10.7577        inf          0        nan         nan         nan\n",
            "district_Jefferson Elementary                        2.6334        inf          0        nan         nan         nan\n",
            "district_Johnstonville Elementary                   -4.6532        inf         -0        nan         nan         nan\n",
            "district_Julian Union Elementary                     8.7796        inf          0        nan         nan         nan\n",
            "district_Junction Elementary                         6.0086        inf          0        nan         nan         nan\n",
            "district_Kentfield Elementary                       -0.7628        inf         -0        nan         nan         nan\n",
            "district_Kenwood Elementary                          2.5069        inf          0        nan         nan         nan\n",
            "district_Keppel Union Elementary                     4.0588        inf          0        nan         nan         nan\n",
            "district_Kernville Union Elementary              -2.042e-15        inf         -0        nan         nan         nan\n",
            "district_King City Union Elementary              -1.457e-15        inf         -0        nan         nan         nan\n",
            "district_Kings River Union Elementary               12.0096        inf          0        nan         nan         nan\n",
            "district_Kings River-Hardwick Union Elementary       4.3951        inf          0        nan         nan         nan\n",
            "district_Kingsburg Joint Union Elementary            4.4935        inf          0        nan         nan         nan\n",
            "district_Kit Carson Union Elementary                -3.4869        inf         -0        nan         nan         nan\n",
            "district_Knights Ferry Elementary                    7.5897        inf          0        nan         nan         nan\n",
            "district_Knightsen Elementary                     3.891e-16        inf          0        nan         nan         nan\n",
            "district_La Mesa-Spring Valley                       2.5827        inf          0        nan         nan         nan\n",
            "district_Lafayette Elementary                      3.23e-15        inf          0        nan         nan         nan\n",
            "district_Laguna Salada Union Elementary          -4.855e-16        inf         -0        nan         nan         nan\n",
            "district_Lagunitas Elementary                        2.5775        inf          0        nan         nan         nan\n",
            "district_Lake Elementary                          1.392e-15        inf          0        nan         nan         nan\n",
            "district_Lakeside Joint Elementary                   1.1823        inf          0        nan         nan         nan\n",
            "district_Lakeside Union Elementary                   5.1602        inf          0        nan         nan         nan\n",
            "district_Lammersville Elementary                     5.3956        inf          0        nan         nan         nan\n",
            "district_Lamont Elementary                        1.151e-15        inf          0        nan         nan         nan\n",
            "district_Lancaster Elementary                        1.3332        inf          0        nan         nan         nan\n",
            "district_Larkspur Elementary                        11.7854        inf          0        nan         nan         nan\n",
            "district_Las Lomitas Elementary                   1.151e-15        inf          0        nan         nan         nan\n",
            "district_Lassen View Union Elementary             1.125e-15        inf          0        nan         nan         nan\n",
            "district_Latrobe Elementary                      -1.108e-15        inf         -0        nan         nan         nan\n",
            "district_Lawndale Elementary                     -2.897e-16        inf         -0        nan         nan         nan\n",
            "district_Le Grand Union Elementary                  -3.3012        inf         -0        nan         nan         nan\n",
            "district_Lemon Grove Elementary                    5.65e-16        inf          0        nan         nan         nan\n",
            "district_Lemoore Union Elementary                   -0.7928        inf         -0        nan         nan         nan\n",
            "district_Lennox Elementary                          -7.7048        inf         -0        nan         nan         nan\n",
            "district_Liberty Elementary                         10.5404        inf          0        nan         nan         nan\n",
            "district_Little Lake City Elementary                 2.3391        inf          0        nan         nan         nan\n",
            "district_Live Oak Elementary                        -8.0734        inf         -0        nan         nan         nan\n",
            "district_Livingston Union Elementary             -9.395e-16        inf         -0        nan         nan         nan\n",
            "district_Loleta Union Elementary                    11.6909        inf          0        nan         nan         nan\n",
            "district_Loma Prieta Joint Union Elemen             -1.4634        inf         -0        nan         nan         nan\n",
            "district_Loomis Union Elementary                  1.958e-15        inf          0        nan         nan         nan\n",
            "district_Los Altos Elementary                    -1.668e-15        inf         -0        nan         nan         nan\n",
            "district_Los Gatos Union Elementary                  1.3882        inf          0        nan         nan         nan\n",
            "district_Los Nietos Elementary                      -5.1882        inf         -0        nan         nan         nan\n",
            "district_Lost Hills Union Elementary              6.837e-16        inf          0        nan         nan         nan\n",
            "district_Lowell Joint Elementary                    -7.1457        inf         -0        nan         nan         nan\n",
            "district_Lucerne Elementary                          0.6306        inf          0        nan         nan         nan\n",
            "district_Lucerne Valley Unified                    -31.4938        inf         -0        nan         nan         nan\n",
            "district_Luther Burbank Elementary                  -1.6677        inf         -0        nan         nan         nan\n",
            "district_Magnolia Elementary                       3.08e-16        inf          0        nan         nan         nan\n",
            "district_Magnolia Union Elementary                   9.3267        inf          0        nan         nan         nan\n",
            "district_Manzanita Elementary                       21.6523        inf          0        nan         nan         nan\n",
            "district_Maple Elementary                          -13.0447        inf         -0        nan         nan         nan\n",
            "district_Marcum-Illinois Union Elementary           -5.5365        inf         -0        nan         nan         nan\n",
            "district_Mark Twain Union Elementary                13.2509        inf          0        nan         nan         nan\n",
            "district_Mark West Union Elementary                 -2.2236        inf         -0        nan         nan         nan\n",
            "district_McCabe Union Elementary                     3.3356        inf          0        nan         nan         nan\n",
            "district_McCloud Union Elementary                -4.582e-16        inf         -0        nan         nan         nan\n",
            "district_McSwain Union Elementary                   20.5285        inf          0        nan         nan         nan\n",
            "district_Meadows Union Elementary                   -3.3393        inf         -0        nan         nan         nan\n",
            "district_Menifee Union Elementary                    2.1265        inf          0        nan         nan         nan\n",
            "district_Menlo Park City Elementary                 -7.1848        inf         -0        nan         nan         nan\n",
            "district_Merced City Elementary                   3.091e-16        inf          0        nan         nan         nan\n",
            "district_Merced River Union Elementary             -38.5870        inf         -0        nan         nan         nan\n",
            "district_Mesa Union Elementary                    4.353e-16        inf          0        nan         nan         nan\n",
            "district_Mill Valley Elementary                      9.9432        inf          0        nan         nan         nan\n",
            "district_Millbrae Elementary                      8.792e-16        inf          0        nan         nan         nan\n",
            "district_Monroe Elementary                          10.1504        inf          0        nan         nan         nan\n",
            "district_Montague Elementary                      -3.12e-16        inf         -0        nan         nan         nan\n",
            "district_Monte Rio Union Elementary                 -2.1338        inf         -0        nan         nan         nan\n",
            "district_Montecito Union Elementary                 -6.7428        inf         -0        nan         nan         nan\n",
            "district_Montgomery Elementary                       2.1510        inf          0        nan         nan         nan\n",
            "district_Moraga Elementary                           8.1608        inf          0        nan         nan         nan\n",
            "district_Moreland Elementary                        -1.3901        inf         -0        nan         nan         nan\n",
            "district_Mother Lode Union Elementary            -8.284e-17        inf         -0        nan         nan         nan\n",
            "district_Mountain Elementary                         0.2900        inf          0        nan         nan         nan\n",
            "district_Mountain Union Elementary                 -38.1084        inf         -0        nan         nan         nan\n",
            "district_Mountain View Elementary                   -4.1000        inf         -0        nan         nan         nan\n",
            "district_Mt. Pleasant Elementary                     2.1920        inf          0        nan         nan         nan\n",
            "district_Mt. Shasta Union Elementary             -8.821e-16        inf         -0        nan         nan         nan\n",
            "district_National Elementary                         4.0159        inf          0        nan         nan         nan\n",
            "district_Nevada City Elementary                      5.3943        inf          0        nan         nan         nan\n",
            "district_New Jerusalem Elementary                    4.5094        inf          0        nan         nan         nan\n",
            "district_Newcastle Elementary                     1.125e-16        inf          0        nan         nan         nan\n",
            "district_Newhall Elementary                         -3.1131        inf         -0        nan         nan         nan\n",
            "district_Norris Elementary                           1.4638        inf          0        nan         nan         nan\n",
            "district_North County Joint Union Elementary        -2.9205        inf         -0        nan         nan         nan\n",
            "district_North Cow Creek Elementary               9.855e-17        inf          0        nan         nan         nan\n",
            "district_North Sacramento Elementary                 0.6369        inf          0        nan         nan         nan\n",
            "district_Nuestro Elementary                         -6.0591        inf         -0        nan         nan         nan\n",
            "district_Nuview Union Elementary                    -6.4761        inf         -0        nan         nan         nan\n",
            "district_Oak Grove Elementary                     4.225e-17        inf          0        nan         nan         nan\n",
            "district_Oak Grove Union Elementary              -3.336e-17        inf         -0        nan         nan         nan\n",
            "district_Oak Valley Union Elementary                11.1165        inf          0        nan         nan         nan\n",
            "district_Oak View Union Elementary                   5.8049        inf          0        nan         nan         nan\n",
            "district_Oakley Union Elementary                     3.2487        inf          0        nan         nan         nan\n",
            "district_Ocean View Elementary                      -3.2722        inf         -0        nan         nan         nan\n",
            "district_Old Adobe Union Elementary                 -3.9927        inf         -0        nan         nan         nan\n",
            "district_Ontario-Montclair Elementary               -2.8354        inf         -0        nan         nan         nan\n",
            "district_Ophir Elementary                           10.8092        inf          0        nan         nan         nan\n",
            "district_Orange Center Elementary                  -11.0019        inf         -0        nan         nan         nan\n",
            "district_Orinda Union Elementary                     6.4620        inf          0        nan         nan         nan\n",
            "district_Oroville City Elementary                  -11.0104        inf         -0        nan         nan         nan\n",
            "district_Oxnard Elementary                          -1.3104        inf         -0        nan         nan         nan\n",
            "district_Pacheco Union Elementary                   -4.7190        inf         -0        nan         nan         nan\n",
            "district_Pacific Elementary                               0        nan        nan        nan         nan         nan\n",
            "district_Pacific Union Elementary                    3.3361        inf          0        nan         nan         nan\n",
            "district_Palermo Union Elementary                   12.7422        inf          0        nan         nan         nan\n",
            "district_Palmdale Elementary                         1.6458        inf          0        nan         nan         nan\n",
            "district_Palo Verde Union Elementary                -5.6576        inf         -0        nan         nan         nan\n",
            "district_Panama Buena Vista Union Elementary              0        nan        nan        nan         nan         nan\n",
            "district_Peninsula Union Elementary                  1.2222        inf          0        nan         nan         nan\n",
            "district_Perris Elementary                           3.9460        inf          0        nan         nan         nan\n",
            "district_Petaluma City Elementary                   -1.5573        inf         -0        nan         nan         nan\n",
            "district_Piner-Olivet Union Elementary                    0        nan        nan        nan         nan         nan\n",
            "district_Pioneer Union Elementary                   -2.4530        inf         -0        nan         nan         nan\n",
            "district_Pixley Union Elementary                          0        nan        nan        nan         nan         nan\n",
            "district_Placer Hills Union Elementary               2.7079        inf          0        nan         nan         nan\n",
            "district_Placerville Union Elementary                     0        nan        nan        nan         nan         nan\n",
            "district_Plainsburg Union Elementary                 2.3380        inf          0        nan         nan         nan\n",
            "district_Plaza Elementary                            7.8695        inf          0        nan         nan         nan\n",
            "district_Pleasant Grove Joint Union Elementary            0        nan        nan        nan         nan         nan\n",
            "district_Pleasant Ridge Union Elementary                  0        nan        nan        nan         nan         nan\n",
            "district_Pleasant Valley Elementary                 -2.9519        inf         -0        nan         nan         nan\n",
            "district_Pleasant Valley Joint Union Elementary           0        nan        nan        nan         nan         nan\n",
            "district_Pleasant View Elementary                   -6.5558        inf         -0        nan         nan         nan\n",
            "district_Plumas Elementary                          -5.0893        inf         -0        nan         nan         nan\n",
            "district_Pollock Pines Elementary                    5.1157        inf          0        nan         nan         nan\n",
            "district_Pond Union Elementary                       9.7543        inf          0        nan         nan         nan\n",
            "district_Portola Valley Elementary                  -2.9278        inf         -0        nan         nan         nan\n",
            "district_Raisin City Elementary                      0.3501        inf          0        nan         nan         nan\n",
            "district_Ravenswood City Elementary                 -0.9636        inf         -0        nan         nan         nan\n",
            "district_Ready Springs Union Elementary              2.7661        inf          0        nan         nan         nan\n",
            "district_Red Bluff Union Elementary                       0        nan        nan        nan         nan         nan\n",
            "district_Redwood City Elementary                    -3.1869        inf         -0        nan         nan         nan\n",
            "district_Reed Union Elementary                       2.6744        inf          0        nan         nan         nan\n",
            "district_Reeds Creek Elementary                    -10.4361        inf         -0        nan         nan         nan\n",
            "district_Rescue Union Elementary                    10.0970        inf          0        nan         nan         nan\n",
            "district_Richfield Elementary                             0        nan        nan        nan         nan         nan\n",
            "district_Richland-Lerdo Union Elementary                  0        nan        nan        nan         nan         nan\n",
            "district_Richmond Elementary                         0.3479        inf          0        nan         nan         nan\n",
            "district_Rincon Valley Union Elementary                   0        nan        nan        nan         nan         nan\n",
            "district_Rio Bravo-Greeley Union Elementary        -50.4421        inf         -0        nan         nan         nan\n",
            "district_Rio Dell Elementary                              0        nan        nan        nan         nan         nan\n",
            "district_Rio Elementary                             -0.0343        inf         -0        nan         nan         nan\n",
            "district_Rio Linda Union Elementary                 -2.5444        inf         -0        nan         nan         nan\n",
            "district_Robla Elementary                                 0        nan        nan        nan         nan         nan\n",
            "district_Rockford  Elementary                             0        nan        nan        nan         nan         nan\n",
            "district_Rocklin Unified                           -41.0456        inf         -0        nan         nan         nan\n",
            "district_Rohnerville Elementary                      1.5150        inf          0        nan         nan         nan\n",
            "district_Romoland Elementary                         2.5101        inf          0        nan         nan         nan\n",
            "district_Rosedale Union Elementary                        0        nan        nan        nan         nan         nan\n",
            "district_Roseland Elementary                        -3.1238        inf         -0        nan         nan         nan\n",
            "district_Rosemead Elementary                        -0.5119        inf         -0        nan         nan         nan\n",
            "district_Roseville City Elementary                   2.8173        inf          0        nan         nan         nan\n",
            "district_Ross Valley Elementary                    -46.3995        inf         -0        nan         nan         nan\n",
            "district_Salida Union Elementary                   -14.8193        inf         -0        nan         nan         nan\n",
            "district_Salinas City Elementary                     0.5341        inf          0        nan         nan         nan\n",
            "district_San Antonio Union Elementary               -0.7517        inf         -0        nan         nan         nan\n",
            "district_San Bruno Park Elementary                   4.3002        inf          0        nan         nan         nan\n",
            "district_San Carlos Elementary                      -0.5793        inf         -0        nan         nan         nan\n",
            "district_San Mateo-Foster City Elementary                 0        nan        nan        nan         nan         nan\n",
            "district_San Pasqual Union Elementary                     0        nan        nan        nan         nan         nan\n",
            "district_San Rafael City Elementary                  4.3058        inf          0        nan         nan         nan\n",
            "district_San Ysidro Elementary                            0        nan        nan        nan         nan         nan\n",
            "district_Santa Barbara Elementary                         0        nan        nan        nan         nan         nan\n",
            "district_Santa Cruz City Elementary                 -2.2300        inf         -0        nan         nan         nan\n",
            "district_Santa Maria-Bonita Elementary              -6.2093        inf         -0        nan         nan         nan\n",
            "district_Santa Paula Elementary                     -1.0964        inf         -0        nan         nan         nan\n",
            "district_Santa Rita Union Elementary                 2.7090        inf          0        nan         nan         nan\n",
            "district_Santa Rosa Elementary                      -2.8821        inf         -0        nan         nan         nan\n",
            "district_Santee Elementary                          -7.9304        inf         -0        nan         nan         nan\n",
            "district_Saratoga Union Elementary                   9.5607        inf          0        nan         nan         nan\n",
            "district_Saucelito Elementary                        1.4054        inf          0        nan         nan         nan\n",
            "district_Saugus Union Elementary                     0.9227        inf          0        nan         nan         nan\n",
            "district_Savanna Elementary                          1.3389        inf          0        nan         nan         nan\n",
            "district_Scotia Union Elementary                     8.4607        inf          0        nan         nan         nan\n",
            "district_Sebastopol Union Elementary                -5.7141        inf         -0        nan         nan         nan\n",
            "district_Shaffer Union Elementary                   -1.2870        inf         -0        nan         nan         nan\n",
            "district_Shasta Union Elementary                    11.1836        inf          0        nan         nan         nan\n",
            "district_Solana Beach Elementary                          0        nan        nan        nan         nan         nan\n",
            "district_Soledad Unified                                  0        nan        nan        nan         nan         nan\n",
            "district_Solvang Elementary                         -1.2526        inf         -0        nan         nan         nan\n",
            "district_Somis Union Elementary                    -46.1313        inf         -0        nan         nan         nan\n",
            "district_Sonora Elementary                          -6.7410        inf         -0        nan         nan         nan\n",
            "district_Soquel Elementary                          -5.2561        inf         -0        nan         nan         nan\n",
            "district_South Bay Union Elementary                  7.4072        inf          0        nan         nan         nan\n",
            "district_South Fork Union Elementary                      0        nan        nan        nan         nan         nan\n",
            "district_South Whittier Elementary                        0        nan        nan        nan         nan         nan\n",
            "district_Southside Elementary                       12.4466        inf          0        nan         nan         nan\n",
            "district_Springville Union Elementary                2.4896        inf          0        nan         nan         nan\n",
            "district_Standard Elementary                         1.1877        inf          0        nan         nan         nan\n",
            "district_Stanislaus Union Elementary                      0        nan        nan        nan         nan         nan\n",
            "district_Strathmore Union Elementary                10.2012        inf          0        nan         nan         nan\n",
            "district_Sulphur Springs Union Elementary            1.7355        inf          0        nan         nan         nan\n",
            "district_Summerville Elementary                     -1.1996        inf         -0        nan         nan         nan\n",
            "district_Sundale Union Elementary                    5.9350        inf          0        nan         nan         nan\n",
            "district_Sunnyside Union Elementary                  0.1061        inf          0        nan         nan         nan\n",
            "district_Sunnyvale Elementary                       -9.0116        inf         -0        nan         nan         nan\n",
            "district_Sunol Glen Unified                               0        nan        nan        nan         nan         nan\n",
            "district_Susanville Elementary                       9.2285        inf          0        nan         nan         nan\n",
            "district_Sylvan Union Elementary                    -5.6498        inf         -0        nan         nan         nan\n",
            "district_Taft City Elementary                        1.5799        inf          0        nan         nan         nan\n",
            "district_Terra Bella Union Elementary                0.7751        inf          0        nan         nan         nan\n",
            "district_Thermalito Union Elementary                12.6201        inf          0        nan         nan         nan\n",
            "district_Three Rivers Union Elementary              -2.3942        inf         -0        nan         nan         nan\n",
            "district_Tipton Elementary                           3.2795        inf          0        nan         nan         nan\n",
            "district_Trinidad Union Elementary                  -6.7134        inf         -0        nan         nan         nan\n",
            "district_Tulare City Elementary                      1.1376        inf          0        nan         nan         nan\n",
            "district_Turlock Joint Elementary                         0        nan        nan        nan         nan         nan\n",
            "district_Twain Harte-Long Barn Union Elementary     -3.3378        inf         -0        nan         nan         nan\n",
            "district_Twin Hills Union Elementary                -1.7866        inf         -0        nan         nan         nan\n",
            "district_Twin Ridges Elementary                      3.4480        inf          0        nan         nan         nan\n",
            "district_Two Rock Union Elementary                  -7.0095        inf         -0        nan         nan         nan\n",
            "district_Union Elementary                            0.7082        inf          0        nan         nan         nan\n",
            "district_Union Hill Elementary                      10.2297        inf          0        nan         nan         nan\n",
            "district_Upper Lake Union Elementary                14.5143        inf          0        nan         nan         nan\n",
            "district_Valle Lindo Elementary                           0        nan        nan        nan         nan         nan\n",
            "district_Vallecitos Elementary                      10.2073        inf          0        nan         nan         nan\n",
            "district_Victor Elementary                                0        nan        nan        nan         nan         nan\n",
            "district_Vineland Elementary                       -11.6328        inf         -0        nan         nan         nan\n",
            "district_Walnut Creek Elementary                     1.9067        inf          0        nan         nan         nan\n",
            "district_Wasco Union Elementary                           0        nan        nan        nan         nan         nan\n",
            "district_Washington Colony Elementary                9.1376        inf          0        nan         nan         nan\n",
            "district_Washington Union Elementary                 5.0894        inf          0        nan         nan         nan\n",
            "district_Waugh Elementary                                 0        nan        nan        nan         nan         nan\n",
            "district_Weaver Union Elementary                    12.1791        inf          0        nan         nan         nan\n",
            "district_Weaverville Elementary                           0        nan        nan        nan         nan         nan\n",
            "district_Weed Union Elementary                      -7.0558        inf         -0        nan         nan         nan\n",
            "district_West Fresno Elementary                    -13.3397        inf         -0        nan         nan         nan\n",
            "district_West Park Elementary                       10.0428        inf          0        nan         nan         nan\n",
            "district_West Side Union Elementary                  7.7301        inf          0        nan         nan         nan\n",
            "district_Westminster Elementary                     -1.6282        inf         -0        nan         nan         nan\n",
            "district_Westmorland Union Elementary                2.7744        inf          0        nan         nan         nan\n",
            "district_Westside Union Elementary                   1.6870        inf          0        nan         nan         nan\n",
            "district_Wheatland Elementary                      -28.5775        inf         -0        nan         nan         nan\n",
            "district_Whisman Elementary                         -3.1394        inf         -0        nan         nan         nan\n",
            "district_Whittier City Elementary                   -6.2813        inf         -0        nan         nan         nan\n",
            "district_Wilmar Union Elementary                    -0.6436        inf         -0        nan         nan         nan\n",
            "district_Wilsona Elementary                         -3.2899        inf         -0        nan         nan         nan\n",
            "district_Winton Elementary                           8.4306        inf          0        nan         nan         nan\n",
            "district_Wiseburn Elementary                        -2.5674        inf         -0        nan         nan         nan\n",
            "district_Woodlake Union Elementary                        0        nan        nan        nan         nan         nan\n",
            "district_Woodside Elementary                              0        nan        nan        nan         nan         nan\n",
            "district_Woodville Elementary                       -4.2360        inf         -0        nan         nan         nan\n",
            "district_Wright Elementary                          -0.2580        inf         -0        nan         nan         nan\n",
            "district_Yreka Union Elementary                     -5.1708        inf         -0        nan         nan         nan\n",
            "grspan_KK-06                                        33.9643        inf          0        nan         nan         nan\n",
            "grspan_KK-08                                        37.7478        inf          0        nan         nan         nan\n",
            "==============================================================================\n",
            "Omnibus:                       45.499   Durbin-Watson:                   1.136\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              179.869\n",
            "Skew:                          -0.527   Prob(JB):                     8.75e-40\n",
            "Kurtosis:                       6.549   Cond. No.                     4.78e+06\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The input rank is higher than the number of observations.\n",
            "[3] The condition number is large, 4.78e+06. This might indicate that there are\n",
            "strong multicollinearity or other numerical problems.\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/regression/linear_model.py:1794: RuntimeWarning: divide by zero encountered in divide\n",
            "  return 1 - (np.divide(self.nobs - self.k_constant, self.df_resid)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/regression/linear_model.py:1794: RuntimeWarning: invalid value encountered in double_scalars\n",
            "  return 1 - (np.divide(self.nobs - self.k_constant, self.df_resid)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/regression/linear_model.py:1716: RuntimeWarning: divide by zero encountered in double_scalars\n",
            "  return np.dot(wresid, wresid) / self.df_resid\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/base/model.py:1529: RuntimeWarning: invalid value encountered in multiply\n",
            "  cov_p = self.normalized_cov_params * scale\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import Ridge\n",
        "ridge01 = Ridge(alpha=0.1).fit(X_train, y_train)\n",
        "print(\"Training set score: {:.2f}\".format(ridge01.score(X_train, y_train)))\n",
        "print(\"Test set score: {:.2f}\".format(ridge01.score(X_test, y_test)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OWZWA_BI8yfP",
        "outputId": "30b7c109-7225-4f63-b006-d7031725ee7f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training set score: 1.00\n",
            "Test set score: 0.89\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import Lasso\n",
        "\n",
        "# Lower alpha to fit a more complex model\n",
        "# we increase the default setting of \"max_iter\",\n",
        "# otherwise the model would warn us that we should increase max_iter.\n",
        "\n",
        "lasso001 = Lasso(alpha=0.01, max_iter=100000).fit(X_train, y_train)\n",
        "print(\"Training set score: {:.2f}\".format(lasso001.score(X_train, y_train)))\n",
        "print(\"Test set score: {:.2f}\".format(lasso001.score(X_test, y_test)))\n",
        "print(\"Number of features used: {}\".format(np.sum(lasso001.coef_ != 0)))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Sh3cU3g7GvCD",
        "outputId": "56613eb6-a099-4d3f-8753-ce90dfa58a13"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training set score: 0.99\n",
            "Test set score: 0.88\n",
            "Number of features used: 75\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Both Lasso and Ridge seem equally as accurate."
      ],
      "metadata": {
        "id": "NtoZxbl9pRYc"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### Now Let's use standard scaler"
      ],
      "metadata": {
        "id": "icq2K9O5HBA_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn import preprocessing\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y)\n",
        "\n",
        "scaler = preprocessing.StandardScaler().fit(X_train)\n",
        "X_train_scaled = scaler.transform(X_train)\n",
        "scaler.transform(X_train)\n",
        "X_test_scaled = scaler.transform(X_test)\n",
        "scaler.transform(X_test)\n",
        "\n",
        "#OLS\n",
        "\n",
        "X_train_scaled_new = sm.add_constant(X_train_scaled)\n",
        "\n",
        "model = sm.OLS(y_train, X_train_scaled_new).fit()\n",
        "print(model.summary())\n",
        "\n",
        "print(\"KNN + RIDGE + LASSO\")\n",
        "\n",
        "#KNN\n",
        "\n",
        "knn = KNeighborsRegressor(n_neighbors=10)\n",
        "knn.fit(X_train_scaled, y_train)\n",
        "print(knn.score(X_test_scaled, y_test), \"=> KNN\")\n",
        "y_pred = knn.predict(X_test_scaled)\n",
        "\n",
        "#Ridge\n",
        "\n",
        "ridge01 = Ridge(alpha=0.1).fit(X_train_scaled, y_train)\n",
        "print(\"Training set score: {:.2f}\".format(ridge01.score(X_train_scaled, y_train), \"=> Ridge\"))\n",
        "print(\"Test set score: {:.2f}\".format(ridge01.score(X_test_scaled, y_test), \"=> Ridge\"))\n",
        "\n",
        "#Lasso\n",
        "\n",
        "lasso001 = Lasso(alpha=0.01, max_iter=100000).fit(X_train_scaled, y_train)\n",
        "print(\"Training set score: {:.2f}\".format(lasso001.score(X_train_scaled, y_train), \"=> Lasso\"))\n",
        "print(\"Test set score: {:.2f}\".format(lasso001.score(X_test_scaled, y_test), \"=> Lasso\"))\n",
        "print(\"Number of features used: {}\".format(np.sum(lasso001.coef_ != 0)))\n",
        "\n",
        "\n",
        "\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "aqV-FgSOHsa7",
        "outputId": "c44010aa-72d9-4f11-ccfd-c8b195d4db38"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "                            OLS Regression Results                            \n",
            "==============================================================================\n",
            "Dep. Variable:                testscr   R-squared:                       1.000\n",
            "Model:                            OLS   Adj. R-squared:                    nan\n",
            "Method:                 Least Squares   F-statistic:                       nan\n",
            "Date:                Sat, 14 Oct 2023   Prob (F-statistic):                nan\n",
            "Time:                        02:47:44   Log-Likelihood:                 8171.1\n",
            "No. Observations:                 315   AIC:                        -1.571e+04\n",
            "Df Residuals:                       0   BIC:                        -1.453e+04\n",
            "Df Model:                         314                                         \n",
            "Covariance Type:            nonrobust                                         \n",
            "==============================================================================\n",
            "                 coef    std err          t      P>|t|      [0.025      0.975]\n",
            "------------------------------------------------------------------------------\n",
            "const        654.1048        inf          0        nan         nan         nan\n",
            "x1             5.1487        inf          0        nan         nan         nan\n",
            "x2             0.1070        inf          0        nan         nan         nan\n",
            "x3            -0.2777        inf         -0        nan         nan         nan\n",
            "x4            -0.2194        inf         -0        nan         nan         nan\n",
            "x5            -1.8051        inf         -0        nan         nan         nan\n",
            "x6            -3.3464        inf         -0        nan         nan         nan\n",
            "x7             0.0849        inf          0        nan         nan         nan\n",
            "x8             0.6129        inf          0        nan         nan         nan\n",
            "x9             0.2190        inf          0        nan         nan         nan\n",
            "x10           -0.5897        inf         -0        nan         nan         nan\n",
            "x11            2.5833        inf          0        nan         nan         nan\n",
            "x12           -2.4947        inf         -0        nan         nan         nan\n",
            "x13            0.8595        inf          0        nan         nan         nan\n",
            "x14            0.3600        inf          0        nan         nan         nan\n",
            "x15           -0.0027        inf         -0        nan         nan         nan\n",
            "x16            0.3201        inf          0        nan         nan         nan\n",
            "x17            0.2412        inf          0        nan         nan         nan\n",
            "x18           -1.4508        inf         -0        nan         nan         nan\n",
            "x19            0.3617        inf          0        nan         nan         nan\n",
            "x20            0.9718        inf          0        nan         nan         nan\n",
            "x21           -0.0024        inf         -0        nan         nan         nan\n",
            "x22            0.0784        inf          0        nan         nan         nan\n",
            "x23           -0.3919        inf         -0        nan         nan         nan\n",
            "x24           -0.0428        inf         -0        nan         nan         nan\n",
            "x25           -0.0714        inf         -0        nan         nan         nan\n",
            "x26            0.1905        inf          0        nan         nan         nan\n",
            "x27           -0.3612        inf         -0        nan         nan         nan\n",
            "x28           -0.1185        inf         -0        nan         nan         nan\n",
            "x29            0.3822        inf          0        nan         nan         nan\n",
            "x30           -0.1343        inf         -0        nan         nan         nan\n",
            "x31           -0.4145        inf         -0        nan         nan         nan\n",
            "x32           -0.4381        inf         -0        nan         nan         nan\n",
            "x33            0.1856        inf          0        nan         nan         nan\n",
            "x34            0.1736        inf          0        nan         nan         nan\n",
            "x35            0.1569        inf          0        nan         nan         nan\n",
            "x36           -0.1766        inf         -0        nan         nan         nan\n",
            "x37           -0.4238        inf         -0        nan         nan         nan\n",
            "x38           -0.3049        inf         -0        nan         nan         nan\n",
            "x39            0.0101        inf          0        nan         nan         nan\n",
            "x40            0.2616        inf          0        nan         nan         nan\n",
            "x41           -0.5148        inf         -0        nan         nan         nan\n",
            "x42           -0.0986        inf         -0        nan         nan         nan\n",
            "x43            0.2166        inf          0        nan         nan         nan\n",
            "x44            0.2902        inf          0        nan         nan         nan\n",
            "x45            0.3869        inf          0        nan         nan         nan\n",
            "x46            0.4206        inf          0        nan         nan         nan\n",
            "x47            0.3557        inf          0        nan         nan         nan\n",
            "x48           -0.0284        inf         -0        nan         nan         nan\n",
            "x49            0.1023        inf          0        nan         nan         nan\n",
            "x50            0.0718        inf          0        nan         nan         nan\n",
            "x51           -0.4490        inf         -0        nan         nan         nan\n",
            "x52            0.1175        inf          0        nan         nan         nan\n",
            "x53            0.4435        inf          0        nan         nan         nan\n",
            "x54           -0.4613        inf         -0        nan         nan         nan\n",
            "x55           -0.1179        inf         -0        nan         nan         nan\n",
            "x56           -0.2549        inf         -0        nan         nan         nan\n",
            "x57            0.3101        inf          0        nan         nan         nan\n",
            "x58           -0.0196        inf         -0        nan         nan         nan\n",
            "x59           -0.2165        inf         -0        nan         nan         nan\n",
            "x60           -0.1357        inf         -0        nan         nan         nan\n",
            "x61         6.185e-17        inf          0        nan         nan         nan\n",
            "x62           -0.7561        inf         -0        nan         nan         nan\n",
            "x63            0.0179        inf          0        nan         nan         nan\n",
            "x64            0.0805        inf          0        nan         nan         nan\n",
            "x65         4.951e-17        inf          0        nan         nan         nan\n",
            "x66         1.808e-16        inf          0        nan         nan         nan\n",
            "x67           -0.3866        inf         -0        nan         nan         nan\n",
            "x68           -0.3237        inf         -0        nan         nan         nan\n",
            "x69            0.7921        inf          0        nan         nan         nan\n",
            "x70            0.3092        inf          0        nan         nan         nan\n",
            "x71           -0.1667        inf         -0        nan         nan         nan\n",
            "x72            0.1603        inf          0        nan         nan         nan\n",
            "x73        -2.757e-16        inf         -0        nan         nan         nan\n",
            "x74           -0.2201        inf         -0        nan         nan         nan\n",
            "x75           -0.1343        inf         -0        nan         nan         nan\n",
            "x76           -0.2658        inf         -0        nan         nan         nan\n",
            "x77           -0.2360        inf         -0        nan         nan         nan\n",
            "x78            0.0263        inf          0        nan         nan         nan\n",
            "x79           -0.1301        inf         -0        nan         nan         nan\n",
            "x80        -1.499e-16        inf         -0        nan         nan         nan\n",
            "x81            0.3123        inf          0        nan         nan         nan\n",
            "x82         2.087e-16        inf          0        nan         nan         nan\n",
            "x83         1.832e-16        inf          0        nan         nan         nan\n",
            "x84           -0.1017        inf         -0        nan         nan         nan\n",
            "x85            0.2188        inf          0        nan         nan         nan\n",
            "x86           -0.5337        inf         -0        nan         nan         nan\n",
            "x87           -0.2188        inf         -0        nan         nan         nan\n",
            "x88            0.2139        inf          0        nan         nan         nan\n",
            "x89        -1.969e-16        inf         -0        nan         nan         nan\n",
            "x90           -0.0849        inf         -0        nan         nan         nan\n",
            "x91            0.3762        inf          0        nan         nan         nan\n",
            "x92           -0.1348        inf         -0        nan         nan         nan\n",
            "x93           -0.5395        inf         -0        nan         nan         nan\n",
            "x94            0.0784        inf          0        nan         nan         nan\n",
            "x95        -5.185e-16        inf         -0        nan         nan         nan\n",
            "x96           -0.7133        inf         -0        nan         nan         nan\n",
            "x97            0.4248        inf          0        nan         nan         nan\n",
            "x98            0.4837        inf          0        nan         nan         nan\n",
            "x99           -0.0750        inf         -0        nan         nan         nan\n",
            "x100          -0.4254        inf         -0        nan         nan         nan\n",
            "x101          -0.3843        inf         -0        nan         nan         nan\n",
            "x102          -0.4253        inf         -0        nan         nan         nan\n",
            "x103          -0.3746        inf         -0        nan         nan         nan\n",
            "x104       -7.707e-17        inf         -0        nan         nan         nan\n",
            "x105           0.0225        inf          0        nan         nan         nan\n",
            "x106        4.469e-17        inf          0        nan         nan         nan\n",
            "x107        -2.55e-16        inf         -0        nan         nan         nan\n",
            "x108           0.3560        inf          0        nan         nan         nan\n",
            "x109           0.3564        inf          0        nan         nan         nan\n",
            "x110          -1.4082        inf         -0        nan         nan         nan\n",
            "x111          -0.1063        inf         -0        nan         nan         nan\n",
            "x112       -2.587e-16        inf         -0        nan         nan         nan\n",
            "x113           0.2683        inf          0        nan         nan         nan\n",
            "x114         2.29e-18        inf          0        nan         nan         nan\n",
            "x115       -3.039e-17        inf         -0        nan         nan         nan\n",
            "x116        1.864e-16        inf          0        nan         nan         nan\n",
            "x117           0.1662        inf          0        nan         nan         nan\n",
            "x118          -0.0211        inf         -0        nan         nan         nan\n",
            "x119          2.8e-17        inf          0        nan         nan         nan\n",
            "x120       -3.995e-17        inf         -0        nan         nan         nan\n",
            "x121        2.373e-17        inf          0        nan         nan         nan\n",
            "x122          -0.0723        inf         -0        nan         nan         nan\n",
            "x123           0.0460        inf          0        nan         nan         nan\n",
            "x124           0.0002        inf          0        nan         nan         nan\n",
            "x125          -0.1482        inf         -0        nan         nan         nan\n",
            "x126           0.0509        inf          0        nan         nan         nan\n",
            "x127          -0.3856        inf         -0        nan         nan         nan\n",
            "x128          -0.1820        inf         -0        nan         nan         nan\n",
            "x129          -0.1422        inf         -0        nan         nan         nan\n",
            "x130          -0.5208        inf         -0        nan         nan         nan\n",
            "x131           0.9458        inf          0        nan         nan         nan\n",
            "x132          -0.3203        inf         -0        nan         nan         nan\n",
            "x133       -9.238e-17        inf         -0        nan         nan         nan\n",
            "x134       -1.295e-16        inf         -0        nan         nan         nan\n",
            "x135           0.1182        inf          0        nan         nan         nan\n",
            "x136          -0.1138        inf         -0        nan         nan         nan\n",
            "x137        2.088e-16        inf          0        nan         nan         nan\n",
            "x138        1.271e-16        inf          0        nan         nan         nan\n",
            "x139           0.5688        inf          0        nan         nan         nan\n",
            "x140          -0.0246        inf         -0        nan         nan         nan\n",
            "x141           0.5495        inf          0        nan         nan         nan\n",
            "x142          -0.4139        inf         -0        nan         nan         nan\n",
            "x143          -0.6006        inf         -0        nan         nan         nan\n",
            "x144       -6.009e-17        inf         -0        nan         nan         nan\n",
            "x145           0.2924        inf          0        nan         nan         nan\n",
            "x146       -2.601e-16        inf         -0        nan         nan         nan\n",
            "x147           0.0505        inf          0        nan         nan         nan\n",
            "x148           0.0908        inf          0        nan         nan         nan\n",
            "x149       -2.258e-18        inf         -0        nan         nan         nan\n",
            "x150          -0.5653        inf         -0        nan         nan         nan\n",
            "x151           0.0930        inf          0        nan         nan         nan\n",
            "x152          -0.2354        inf         -0        nan         nan         nan\n",
            "x153        1.858e-16        inf          0        nan         nan         nan\n",
            "x154           0.4435        inf          0        nan         nan         nan\n",
            "x155           0.0002        inf          0        nan         nan         nan\n",
            "x156          -0.0744        inf         -0        nan         nan         nan\n",
            "x157          -0.1148        inf         -0        nan         nan         nan\n",
            "x158          -0.5027        inf         -0        nan         nan         nan\n",
            "x159       -6.866e-17        inf         -0        nan         nan         nan\n",
            "x160           0.2464        inf          0        nan         nan         nan\n",
            "x161           0.3666        inf          0        nan         nan         nan\n",
            "x162          -0.1873        inf         -0        nan         nan         nan\n",
            "x163          -0.4629        inf         -0        nan         nan         nan\n",
            "x164           0.3987        inf          0        nan         nan         nan\n",
            "x165          -0.0103        inf         -0        nan         nan         nan\n",
            "x166           0.1019        inf          0        nan         nan         nan\n",
            "x167          -0.1212        inf         -0        nan         nan         nan\n",
            "x168        7.023e-17        inf          0        nan         nan         nan\n",
            "x169           0.2305        inf          0        nan         nan         nan\n",
            "x170           0.3424        inf          0        nan         nan         nan\n",
            "x171          -0.1727        inf         -0        nan         nan         nan\n",
            "x172          -0.1569        inf         -0        nan         nan         nan\n",
            "x173       -1.314e-16        inf         -0        nan         nan         nan\n",
            "x174           0.2196        inf          0        nan         nan         nan\n",
            "x175          -0.0112        inf         -0        nan         nan         nan\n",
            "x176        1.955e-16        inf          0        nan         nan         nan\n",
            "x177       -1.363e-16        inf         -0        nan         nan         nan\n",
            "x178        -3.03e-16        inf         -0        nan         nan         nan\n",
            "x179           0.1999        inf          0        nan         nan         nan\n",
            "x180          -0.3971        inf         -0        nan         nan         nan\n",
            "x181          -0.3331        inf         -0        nan         nan         nan\n",
            "x182          -0.3617        inf         -0        nan         nan         nan\n",
            "x183       -1.697e-16        inf         -0        nan         nan         nan\n",
            "x184           0.0154        inf          0        nan         nan         nan\n",
            "x185        2.672e-17        inf          0        nan         nan         nan\n",
            "x186       -1.921e-16        inf         -0        nan         nan         nan\n",
            "x187          -0.2138        inf         -0        nan         nan         nan\n",
            "x188          -0.2813        inf         -0        nan         nan         nan\n",
            "x189           0.1958        inf          0        nan         nan         nan\n",
            "x190           0.2028        inf          0        nan         nan         nan\n",
            "x191           0.1997        inf          0        nan         nan         nan\n",
            "x192           0.1253        inf          0        nan         nan         nan\n",
            "x193        1.625e-16        inf          0        nan         nan         nan\n",
            "x194          -0.1731        inf         -0        nan         nan         nan\n",
            "x195        6.761e-17        inf          0        nan         nan         nan\n",
            "x196           0.0388        inf          0        nan         nan         nan\n",
            "x197          -0.2148        inf         -0        nan         nan         nan\n",
            "x198        5.331e-17        inf          0        nan         nan         nan\n",
            "x199           0.2284        inf          0        nan         nan         nan\n",
            "x200          -0.3413        inf         -0        nan         nan         nan\n",
            "x201           0.3727        inf          0        nan         nan         nan\n",
            "x202           0.2260        inf          0        nan         nan         nan\n",
            "x203          -0.0465        inf         -0        nan         nan         nan\n",
            "x204          -0.0456        inf         -0        nan         nan         nan\n",
            "x205        9.894e-18        inf          0        nan         nan         nan\n",
            "x206           0.1821        inf          0        nan         nan         nan\n",
            "x207        3.514e-17        inf          0        nan         nan         nan\n",
            "x208          -0.2972        inf         -0        nan         nan         nan\n",
            "x209          -1.0300        inf         -0        nan         nan         nan\n",
            "x210           0.6225        inf          0        nan         nan         nan\n",
            "x211           0.2545        inf          0        nan         nan         nan\n",
            "x212           0.1234        inf          0        nan         nan         nan\n",
            "x213          -0.0817        inf         -0        nan         nan         nan\n",
            "x214        1.756e-16        inf          0        nan         nan         nan\n",
            "x215          -0.1767        inf         -0        nan         nan         nan\n",
            "x216        1.133e-16        inf          0        nan         nan         nan\n",
            "x217          -0.1043        inf         -0        nan         nan         nan\n",
            "x218          -0.4813        inf         -0        nan         nan         nan\n",
            "x219        1.593e-16        inf          0        nan         nan         nan\n",
            "x220          -0.0891        inf         -0        nan         nan         nan\n",
            "x221       -7.135e-17        inf         -0        nan         nan         nan\n",
            "x222           0.0404        inf          0        nan         nan         nan\n",
            "x223       -5.567e-17        inf         -0        nan         nan         nan\n",
            "x224          -0.0885        inf         -0        nan         nan         nan\n",
            "x225           0.3259        inf          0        nan         nan         nan\n",
            "x226        9.785e-17        inf          0        nan         nan         nan\n",
            "x227           0.3356        inf          0        nan         nan         nan\n",
            "x228          -0.4982        inf         -0        nan         nan         nan\n",
            "x229           0.1279        inf          0        nan         nan         nan\n",
            "x230           0.3667        inf          0        nan         nan         nan\n",
            "x231           0.1749        inf          0        nan         nan         nan\n",
            "x232           0.1728        inf          0        nan         nan         nan\n",
            "x233           0.6406        inf          0        nan         nan         nan\n",
            "x234          -1.0321        inf         -0        nan         nan         nan\n",
            "x235           0.4154        inf          0        nan         nan         nan\n",
            "x236           0.8071        inf          0        nan         nan         nan\n",
            "x237          -0.1225        inf         -0        nan         nan         nan\n",
            "x238          -0.1662        inf         -0        nan         nan         nan\n",
            "x239           0.3445        inf          0        nan         nan         nan\n",
            "x240          -0.1717        inf         -0        nan         nan         nan\n",
            "x241          -0.2770        inf         -0        nan         nan         nan\n",
            "x242           0.0125        inf          0        nan         nan         nan\n",
            "x243        1.353e-16        inf          0        nan         nan         nan\n",
            "x244        1.267e-16        inf          0        nan         nan         nan\n",
            "x245           0.3412        inf          0        nan         nan         nan\n",
            "x246           1.4013        inf          0        nan         nan         nan\n",
            "x247        -4.93e-17        inf         -0        nan         nan         nan\n",
            "x248       -9.508e-17        inf         -0        nan         nan         nan\n",
            "x249          -0.1491        inf         -0        nan         nan         nan\n",
            "x250          -0.7707        inf         -0        nan         nan         nan\n",
            "x251          -0.1179        inf         -0        nan         nan         nan\n",
            "x252          -0.5405        inf         -0        nan         nan         nan\n",
            "x253          -0.2383        inf         -0        nan         nan         nan\n",
            "x254           0.4211        inf          0        nan         nan         nan\n",
            "x255        9.239e-17        inf          0        nan         nan         nan\n",
            "x256          -0.2455        inf         -0        nan         nan         nan\n",
            "x257          -0.1458        inf         -0        nan         nan         nan\n",
            "x258          -0.1372        inf         -0        nan         nan         nan\n",
            "x259          -0.1002        inf         -0        nan         nan         nan\n",
            "x260           0.1760        inf          0        nan         nan         nan\n",
            "x261           1.2877        inf          0        nan         nan         nan\n",
            "x262        3.016e-17        inf          0        nan         nan         nan\n",
            "x263          -0.3893        inf         -0        nan         nan         nan\n",
            "x264          -0.5069        inf         -0        nan         nan         nan\n",
            "x265           0.3238        inf          0        nan         nan         nan\n",
            "x266          -0.1836        inf         -0        nan         nan         nan\n",
            "x267          -0.4991        inf         -0        nan         nan         nan\n",
            "x268       -9.375e-18        inf         -0        nan         nan         nan\n",
            "x269          -0.2120        inf         -0        nan         nan         nan\n",
            "x270          -0.2016        inf         -0        nan         nan         nan\n",
            "x271       -1.594e-17        inf         -0        nan         nan         nan\n",
            "x272           0.6500        inf          0        nan         nan         nan\n",
            "x273          -0.1992        inf         -0        nan         nan         nan\n",
            "x274          -0.0027        inf         -0        nan         nan         nan\n",
            "x275          -0.0743        inf         -0        nan         nan         nan\n",
            "x276          -0.0040        inf         -0        nan         nan         nan\n",
            "x277        5.438e-17        inf          0        nan         nan         nan\n",
            "x278          -0.1049        inf         -0        nan         nan         nan\n",
            "x279           0.0288        inf          0        nan         nan         nan\n",
            "x280        -1.55e-17        inf         -0        nan         nan         nan\n",
            "x281           0.3990        inf          0        nan         nan         nan\n",
            "x282           0.2170        inf          0        nan         nan         nan\n",
            "x283          -0.0571        inf         -0        nan         nan         nan\n",
            "x284           0.6704        inf          0        nan         nan         nan\n",
            "x285           0.6747        inf          0        nan         nan         nan\n",
            "x286          -0.0946        inf         -0        nan         nan         nan\n",
            "x287           0.5514        inf          0        nan         nan         nan\n",
            "x288        5.235e-17        inf          0        nan         nan         nan\n",
            "x289       -1.034e-17        inf         -0        nan         nan         nan\n",
            "x290           0.2228        inf          0        nan         nan         nan\n",
            "x291          -0.8374        inf         -0        nan         nan         nan\n",
            "x292           0.9463        inf          0        nan         nan         nan\n",
            "x293           0.1151        inf          0        nan         nan         nan\n",
            "x294           0.0705        inf          0        nan         nan         nan\n",
            "x295           0.4859        inf          0        nan         nan         nan\n",
            "x296          -0.0611        inf         -0        nan         nan         nan\n",
            "x297           0.0209        inf          0        nan         nan         nan\n",
            "x298          -0.3459        inf         -0        nan         nan         nan\n",
            "x299           0.0241        inf          0        nan         nan         nan\n",
            "x300           0.0978        inf          0        nan         nan         nan\n",
            "x301           0.5650        inf          0        nan         nan         nan\n",
            "x302       -2.635e-17        inf         -0        nan         nan         nan\n",
            "x303           0.3565        inf          0        nan         nan         nan\n",
            "x304           0.2814        inf          0        nan         nan         nan\n",
            "x305           0.1251        inf          0        nan         nan         nan\n",
            "x306       -2.423e-17        inf         -0        nan         nan         nan\n",
            "x307           0.2732        inf          0        nan         nan         nan\n",
            "x308           0.1171        inf          0        nan         nan         nan\n",
            "x309           0.0772        inf          0        nan         nan         nan\n",
            "x310          -0.1766        inf         -0        nan         nan         nan\n",
            "x311           0.0257        inf          0        nan         nan         nan\n",
            "x312           0.8620        inf          0        nan         nan         nan\n",
            "x313          -0.3361        inf         -0        nan         nan         nan\n",
            "x314           0.0645        inf          0        nan         nan         nan\n",
            "x315          -0.2899        inf         -0        nan         nan         nan\n",
            "x316           0.2118        inf          0        nan         nan         nan\n",
            "x317          -0.1202        inf         -0        nan         nan         nan\n",
            "x318          -0.3173        inf         -0        nan         nan         nan\n",
            "x319          -0.6971        inf         -0        nan         nan         nan\n",
            "x320          -0.5897        inf         -0        nan         nan         nan\n",
            "x321           0.7717        inf          0        nan         nan         nan\n",
            "x322          -0.1157        inf         -0        nan         nan         nan\n",
            "x323          -0.2950        inf         -0        nan         nan         nan\n",
            "x324          -0.1175        inf         -0        nan         nan         nan\n",
            "x325                0        nan        nan        nan         nan         nan\n",
            "x326           0.4383        inf          0        nan         nan         nan\n",
            "x327           0.0842        inf          0        nan         nan         nan\n",
            "x328          -0.0938        inf         -0        nan         nan         nan\n",
            "x329          -0.0448        inf         -0        nan         nan         nan\n",
            "x330                0        nan        nan        nan         nan         nan\n",
            "x331          -0.5079        inf         -0        nan         nan         nan\n",
            "x332                0        nan        nan        nan         nan         nan\n",
            "x333           0.0141        inf          0        nan         nan         nan\n",
            "x334          -0.0861        inf         -0        nan         nan         nan\n",
            "x335          -0.1321        inf         -0        nan         nan         nan\n",
            "x336          -0.6175        inf         -0        nan         nan         nan\n",
            "x337           0.1539        inf          0        nan         nan         nan\n",
            "x338           0.1066        inf          0        nan         nan         nan\n",
            "x339                0        nan        nan        nan         nan         nan\n",
            "x340                0        nan        nan        nan         nan         nan\n",
            "x341                0        nan        nan        nan         nan         nan\n",
            "x342           0.3921        inf          0        nan         nan         nan\n",
            "x343           0.1245        inf          0        nan         nan         nan\n",
            "x344          -0.0986        inf         -0        nan         nan         nan\n",
            "x345                0        nan        nan        nan         nan         nan\n",
            "x346           0.3101        inf          0        nan         nan         nan\n",
            "x347                0        nan        nan        nan         nan         nan\n",
            "x348          -0.2515        inf         -0        nan         nan         nan\n",
            "x349           0.5446        inf          0        nan         nan         nan\n",
            "x350                0        nan        nan        nan         nan         nan\n",
            "x351          -0.5500        inf         -0        nan         nan         nan\n",
            "x352           0.2024        inf          0        nan         nan         nan\n",
            "x353          -0.1034        inf         -0        nan         nan         nan\n",
            "x354          -0.4747        inf         -0        nan         nan         nan\n",
            "x355           0.1744        inf          0        nan         nan         nan\n",
            "x356          -0.3619        inf         -0        nan         nan         nan\n",
            "x357           0.1659        inf          0        nan         nan         nan\n",
            "x358           0.5763        inf          0        nan         nan         nan\n",
            "x359          -0.1674        inf         -0        nan         nan         nan\n",
            "x360           0.2598        inf          0        nan         nan         nan\n",
            "x361           0.4712        inf          0        nan         nan         nan\n",
            "x362          -0.2941        inf         -0        nan         nan         nan\n",
            "x363          -0.6550        inf         -0        nan         nan         nan\n",
            "x364          -0.2879        inf         -0        nan         nan         nan\n",
            "x365           0.0742        inf          0        nan         nan         nan\n",
            "x366           0.0271        inf          0        nan         nan         nan\n",
            "x367           0.1588        inf          0        nan         nan         nan\n",
            "x368           0.2133        inf          0        nan         nan         nan\n",
            "x369                0        nan        nan        nan         nan         nan\n",
            "x370                0        nan        nan        nan         nan         nan\n",
            "x371                0        nan        nan        nan         nan         nan\n",
            "x372          -0.2092        inf         -0        nan         nan         nan\n",
            "x373           0.7071        inf          0        nan         nan         nan\n",
            "x374           0.0985        inf          0        nan         nan         nan\n",
            "x375                0        nan        nan        nan         nan         nan\n",
            "x376          -0.0732        inf         -0        nan         nan         nan\n",
            "x377          -0.3319        inf         -0        nan         nan         nan\n",
            "x378          -0.2941        inf         -0        nan         nan         nan\n",
            "x379          -0.1979        inf         -0        nan         nan         nan\n",
            "x380          -0.0973        inf         -0        nan         nan         nan\n",
            "x381                0        nan        nan        nan         nan         nan\n",
            "x382           0.4505        inf          0        nan         nan         nan\n",
            "x383          -0.0068        inf         -0        nan         nan         nan\n",
            "x384          -0.1464        inf         -0        nan         nan         nan\n",
            "x385          -0.0032        inf         -0        nan         nan         nan\n",
            "x386          -0.0243        inf         -0        nan         nan         nan\n",
            "x387          -0.3768        inf         -0        nan         nan         nan\n",
            "x388          -0.2571        inf         -0        nan         nan         nan\n",
            "x389          -0.2916        inf         -0        nan         nan         nan\n",
            "x390                0        nan        nan        nan         nan         nan\n",
            "x391                0        nan        nan        nan         nan         nan\n",
            "x392           0.9782        inf          0        nan         nan         nan\n",
            "x393           0.7978        inf          0        nan         nan         nan\n",
            "x394           0.2121        inf          0        nan         nan         nan\n",
            "x395          -0.1835        inf         -0        nan         nan         nan\n",
            "x396          -0.3455        inf         -0        nan         nan         nan\n",
            "x397           0.1427        inf          0        nan         nan         nan\n",
            "x398          -0.0983        inf         -0        nan         nan         nan\n",
            "x399          -0.0790        inf         -0        nan         nan         nan\n",
            "x400           0.7386        inf          0        nan         nan         nan\n",
            "x401          -0.2395        inf         -0        nan         nan         nan\n",
            "x402           0.0224        inf          0        nan         nan         nan\n",
            "x403                0        nan        nan        nan         nan         nan\n",
            "x404                0        nan        nan        nan         nan         nan\n",
            "x405           0.0084        inf          0        nan         nan         nan\n",
            "x406                0        nan        nan        nan         nan         nan\n",
            "x407           0.1633        inf          0        nan         nan         nan\n",
            "x408          -0.0989        inf         -0        nan         nan         nan\n",
            "x409          -0.1333        inf         -0        nan         nan         nan\n",
            "x410                0        nan        nan        nan         nan         nan\n",
            "x411          -0.2921        inf         -0        nan         nan         nan\n",
            "x412          -0.1020        inf         -0        nan         nan         nan\n",
            "x413           0.0064        inf          0        nan         nan         nan\n",
            "x414           0.0312        inf          0        nan         nan         nan\n",
            "x415           0.0213        inf          0        nan         nan         nan\n",
            "x416                0        nan        nan        nan         nan         nan\n",
            "x417          -0.9563        inf         -0        nan         nan         nan\n",
            "x418           0.2070        inf          0        nan         nan         nan\n",
            "x419           0.8595        inf          0        nan         nan         nan\n",
            "x420           0.1674        inf          0        nan         nan         nan\n",
            "x421          -0.0476        inf         -0        nan         nan         nan\n",
            "x422          -0.1533        inf         -0        nan         nan         nan\n",
            "x423          -0.3644        inf         -0        nan         nan         nan\n",
            "x424           0.5485        inf          0        nan         nan         nan\n",
            "x425                0        nan        nan        nan         nan         nan\n",
            "x426          -0.7426        inf         -0        nan         nan         nan\n",
            "x427          -0.4188        inf         -0        nan         nan         nan\n",
            "x428           0.2806        inf          0        nan         nan         nan\n",
            "x429          -0.0952        inf         -0        nan         nan         nan\n",
            "x430          -0.4441        inf         -0        nan         nan         nan\n",
            "x431                0        nan        nan        nan         nan         nan\n",
            "x432          -0.1200        inf         -0        nan         nan         nan\n",
            "x433                0        nan        nan        nan         nan         nan\n",
            "x434          -0.0041        inf         -0        nan         nan         nan\n",
            "x435           0.3584        inf          0        nan         nan         nan\n",
            "x436           0.0828        inf          0        nan         nan         nan\n",
            "x437                0        nan        nan        nan         nan         nan\n",
            "x438          -0.1055        inf         -0        nan         nan         nan\n",
            "x439          -0.0853        inf         -0        nan         nan         nan\n",
            "x440                0        nan        nan        nan         nan         nan\n",
            "x441                0        nan        nan        nan         nan         nan\n",
            "x442                0        nan        nan        nan         nan         nan\n",
            "x443           0.4821        inf          0        nan         nan         nan\n",
            "x444           0.5908        inf          0        nan         nan         nan\n",
            "x445           0.1334        inf          0        nan         nan         nan\n",
            "x446                0        nan        nan        nan         nan         nan\n",
            "x447                0        nan        nan        nan         nan         nan\n",
            "x448           0.2996        inf          0        nan         nan         nan\n",
            "x449           0.2201        inf          0        nan         nan         nan\n",
            "x450                0        nan        nan        nan         nan         nan\n",
            "x451          -0.6407        inf         -0        nan         nan         nan\n",
            "x452           0.0822        inf          0        nan         nan         nan\n",
            "x453                0        nan        nan        nan         nan         nan\n",
            "x454           0.1335        inf          0        nan         nan         nan\n",
            "x455                0        nan        nan        nan         nan         nan\n",
            "x456                0        nan        nan        nan         nan         nan\n",
            "x457          -0.3819        inf         -0        nan         nan         nan\n",
            "x458          -0.1470        inf         -0        nan         nan         nan\n",
            "x459          -0.2667        inf         -0        nan         nan         nan\n",
            "x460          -0.1367        inf         -0        nan         nan         nan\n",
            "x461                0        nan        nan        nan         nan         nan\n",
            "x462                0        nan        nan        nan         nan         nan\n",
            "x463           0.6729        inf          0        nan         nan         nan\n",
            "x464                0        nan        nan        nan         nan         nan\n",
            "x465           0.2885        inf          0        nan         nan         nan\n",
            "x466           0.2270        inf          0        nan         nan         nan\n",
            "x467           0.3818        inf          0        nan         nan         nan\n",
            "x468          -0.3818        inf         -0        nan         nan         nan\n",
            "==============================================================================\n",
            "Omnibus:                       48.070   Durbin-Watson:                   1.975\n",
            "Prob(Omnibus):                  0.000   Jarque-Bera (JB):              165.375\n",
            "Skew:                           0.616   Prob(JB):                     1.23e-36\n",
            "Kurtosis:                       6.329   Cond. No.                         10.4\n",
            "==============================================================================\n",
            "\n",
            "Notes:\n",
            "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
            "[2] The input rank is higher than the number of observations.\n",
            "KNN + RIDGE + LASSO\n",
            "0.2075747211244966 => KNN\n",
            "Training set score: 1.00\n",
            "Test set score: 0.86\n",
            "Training set score: 1.00\n",
            "Test set score: 0.91\n",
            "Number of features used: 276\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/statsmodels/regression/linear_model.py:1794: RuntimeWarning: divide by zero encountered in divide\n",
            "  return 1 - (np.divide(self.nobs - self.k_constant, self.df_resid)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/regression/linear_model.py:1794: RuntimeWarning: invalid value encountered in double_scalars\n",
            "  return 1 - (np.divide(self.nobs - self.k_constant, self.df_resid)\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/regression/linear_model.py:1716: RuntimeWarning: divide by zero encountered in double_scalars\n",
            "  return np.dot(wresid, wresid) / self.df_resid\n",
            "/usr/local/lib/python3.10/dist-packages/statsmodels/base/model.py:1529: RuntimeWarning: invalid value encountered in multiply\n",
            "  cov_p = self.normalized_cov_params * scale\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Scaling results were mixed given an increase the accuracy for the training set and test score of  it reaches a perfect 1 value for Lasso and Ridge. However, this comes with the risk of more overfit given a decrease in the test score for both, notably Ridge. KNN performance is very esticatic, as it can have higher accuracy coefficient much like a very low one. The OLS regression is estatic, with. The model is worse after scaling due to its complex nature attributed to a large dataset, hyperparameters of different nature so rendering the dataset very sensitive to external noises; increasing its tendency to overfit."
      ],
      "metadata": {
        "id": "AtPyEb92K1fs"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.4 Tune the parameters of the models where possible using GridSearchCV. Do the results improve?\n",
        "\n"
      ],
      "metadata": {
        "id": "X9Hz2SXxNTrZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.pipeline import make_pipeline\n",
        "from sklearn.neighbors import KNeighborsRegressor\n",
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "knn_pipe = make_pipeline(StandardScaler(), KNeighborsRegressor())\n",
        "print(knn_pipe.steps) # names in single quotes (i.e.-'standardscaler' and 'kneighborsregressor')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QkYw3oNrNwu3",
        "outputId": "f8513b3a-ea9f-45c3-df9d-526139204cc7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[('standardscaler', StandardScaler()), ('kneighborsregressor', KNeighborsRegressor())]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The above values have only two steps as in simarly to a binary model. Now we have removed the mean and scale to unit variance, let's see how it goes for KNN. Recall that GridSeach can't be used for linear models due to their absence of multiples parameters. It could be for Lasso and Ridge using penalized parameters, which we did not in this exercise.  \n",
        ". I won't use the scaled variables from standard scaller as GridSearch already does it albeit by removing the means and converting to variance.   "
      ],
      "metadata": {
        "id": "EYMOFTSCOLni"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "knn_pipe = make_pipeline(StandardScaler(), KNeighborsRegressor())\n",
        "\n",
        "#refer to step name with two underscores before argument name when...\n",
        "#you build a parameter grid\n",
        "\n",
        "param_grid_knn = {'kneighborsregressor__n_neighbors': range(1, 10)}\n",
        "grid = GridSearchCV(knn_pipe, param_grid_knn, cv=10)\n",
        "grid.fit(X_train, y_train)\n",
        "print(grid.best_params_)\n",
        "print(grid.score(X_test, y_test))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CAd9uG2VO4c1",
        "outputId": "4a430745-c088-4b99-aabe-b67f751d55ce"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'kneighborsregressor__n_neighbors': 2}\n",
            "0.5441597135737715\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Knn model is better, with an increase in accuracy points compared to the first model. GridSearch is more accurate as it written specifically to scale data with hyperparameters, that is multidimensional. The previous scaling method was inacurate because it tried to fit a multilinear model into a linear one. GridSearch shows that the model is better perfoming with 2 neighboors."
      ],
      "metadata": {
        "id": "gmpmON29riU0"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "I will use a pipeline scaling method with regular transformation for Lasso and Ridge."
      ],
      "metadata": {
        "id": "xk0d7o3STYPn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from sklearn.pipeline import make_pipeline\n",
        "\n",
        "pipe = make_pipeline(StandardScaler(), Ridge())\n",
        "pipe.fit(X_train, y_train)\n",
        "pipe.score(X_test, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I1nobflZQjpt",
        "outputId": "11e4cb52-2e09-46c0-be72-159d9abf7efb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8550137236487992"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [],
      "metadata": {
        "id": "wxkDaJLzTkqD"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from sklearn.pipeline import make_pipeline\n",
        "\n",
        "pipe = make_pipeline(StandardScaler(), Lasso())\n",
        "pipe.fit(X_train, y_train)\n",
        "pipe.score(X_test, y_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UYW9VxjRSdvR",
        "outputId": "58ff755e-21c7-434f-ca92-99f755fc7ca7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0.8981219467220987"
            ]
          },
          "metadata": {},
          "execution_count": 118
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 1.5 Compare the coefficients of your two best linear models (not knn), do they agree on which features are important?"
      ],
      "metadata": {
        "id": "zf9Xo4znThG3"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "It was hard to tell which model between Lasso and Ridge have had a better performance in its training and test set given that both always had similar reuslts. However this changes when scaling: 1) Standard Scaler increases more the accuracy of Lasso than Ridge respectively from 0.8 to 0.83 / 0.81 to 0.78; 2) Pipeline scaling Lasso has a better accuracy over Ridge by a margin of 0.12 points. So Lasso is the most accurate.\n",
        "Because of their closer score, then the model follow an accurate depiction in determining which features influence the most the target variable."
      ],
      "metadata": {
        "id": "IJXivtQgTmkR"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###1.6 Now that you have experimented with different models, discuss which final model you would choose to predict new data"
      ],
      "metadata": {
        "id": "_8woFTwlVV9v"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Lasso, without a doubt. It better performs than both models. Why is it more accurate comes from its shrinkage to 0 of the variables than Ridge which does it a lighter way, while defining itself as a linear model; giving an edge of stability over Knn, which could intepret features in a wrong way due to its hyperparameters especially as the model gets more complex. On a side note, Knn does not use training data based upon simple matrixes, making it less reliable than Lasso and Ridge in a scenario where data is spread out, and unorganized. This is the case with that dataset given its float, int and objects features format which decreases the efficiency in the machine to correclty interpret some features rigourously. To sum up, Lasso ability's to shrink to 0 all the most irrelevant features is what makes it stands out over the others, especially after the data has been scaled.  "
      ],
      "metadata": {
        "id": "41-kp-wjVZYC"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Part 2: Classification on red and white wine characteristics\n",
        "\n"
      ],
      "metadata": {
        "id": "adSBq39dKndy"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "pip install ucimlrepo"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6yloQKf7K4xg",
        "outputId": "fc7106d4-9a96-4fb4-9a4f-df5d786584e4"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Collecting ucimlrepo\n",
            "  Downloading ucimlrepo-0.0.2-py3-none-any.whl (7.0 kB)\n",
            "Installing collected packages: ucimlrepo\n",
            "Successfully installed ucimlrepo-0.0.2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "   from google.colab import drive\n",
        "\n",
        "   drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7guz6EWIK9rX",
        "outputId": "dff75b3d-aac2-49d2-aa84-d2c0aba6518f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        " import pandas as pd\n",
        "\n",
        "red_wine_df = pd.read_csv(\"/content/drive/My Drive/winequality-red.csv\", sep = ';')\n",
        "red_wine_df['winetype'] = 1\n",
        "\n",
        "white_wine_df = pd.read_csv(\"/content/drive/My Drive/winequality-white.csv\", sep = ';')\n",
        "white_wine_df['winetype'] = 0\n",
        "\n",
        "wine_df = pd.concat([red_wine_df, white_wine_df])\n",
        "print(wine_df.head())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "I_Ib9LT1Shry",
        "outputId": "66054075-9058-4a42-879b-7d870653985f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "   fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n",
            "0            7.4              0.70         0.00             1.9      0.076   \n",
            "1            7.8              0.88         0.00             2.6      0.098   \n",
            "2            7.8              0.76         0.04             2.3      0.092   \n",
            "3           11.2              0.28         0.56             1.9      0.075   \n",
            "4            7.4              0.70         0.00             1.9      0.076   \n",
            "\n",
            "   free sulfur dioxide  total sulfur dioxide  density    pH  sulphates  \\\n",
            "0                 11.0                  34.0   0.9978  3.51       0.56   \n",
            "1                 25.0                  67.0   0.9968  3.20       0.68   \n",
            "2                 15.0                  54.0   0.9970  3.26       0.65   \n",
            "3                 17.0                  60.0   0.9980  3.16       0.58   \n",
            "4                 11.0                  34.0   0.9978  3.51       0.56   \n",
            "\n",
            "   alcohol  quality  winetype  \n",
            "0      9.4        5         1  \n",
            "1      9.8        5         1  \n",
            "2      9.8        5         1  \n",
            "3      9.8        6         1  \n",
            "4      9.4        5         1  \n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "wine_df.dtypes\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HmJb1YiIGCP4",
        "outputId": "c176d421-9bc6-4d12-d09b-f9814dafe7bc"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "fixed acidity           float64\n",
              "volatile acidity        float64\n",
              "citric acid             float64\n",
              "residual sugar          float64\n",
              "chlorides               float64\n",
              "free sulfur dioxide     float64\n",
              "total sulfur dioxide    float64\n",
              "density                 float64\n",
              "pH                      float64\n",
              "sulphates               float64\n",
              "alcohol                 float64\n",
              "quality                   int64\n",
              "winetype                  int64\n",
              "dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2.1 Visualize the univariate distribution of the target feature and each of the three explanatory variables that you think are likely to have a relationship with the target feature.   "
      ],
      "metadata": {
        "id": "0Va0_tOXVTUK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "%matplotlib inline\n",
        "from matplotlib import pyplot as plt\n",
        "\n",
        "# Univariate distribution of the target feature: testscr\n",
        "sns.histplot(wine_df['winetype'], kde=True)\n",
        "plt.title('univariate distribution to the type of wine')\n",
        "plt.xticks(ticks=[0,1], labels=['White Wine', 'Red Wine'])\n",
        "plt.show()\n",
        "\n",
        "variables =  ['density', 'pH', 'residual sugar']\n",
        "\n",
        "for var in variables:\n",
        "    sns.histplot(wine_df[var], kde=True)\n",
        "    description = {\n",
        "        'density': 'wine',\n",
        "        'pH': 'average pH',\n",
        "        'residual sugar': 'average sugar'\n",
        "    }\n",
        "    plt.title(f'Distribution of {description[var]}')\n",
        "    plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "Vl8T8azRVUJh",
        "outputId": "517d3889-5bb5-43cd-9de7-6917c4739471"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2.2 Split data into training and test set. Build models that evaluate the relationship between all available X variables in the dataset and the target variable. Evaluate Logistic Regression, Penalized Logistic Regression, and KNN for classification using cross-validation. How different are the results? How does scaling the data with StandardScaler influence the results?"
      ],
      "metadata": {
        "id": "av7UKXuVXDTz"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import train_test_split\n"
      ],
      "metadata": {
        "id": "NPfYtEv8XFEG"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Assuming X is your feature matrix and y is the target vector\n",
        "\n",
        "# Use train_test_split(X,y) to create four new data sets, defaults to .75/.25 split\n",
        "X = wine_df.loc [:,wine_df.columns != 'winetype']\n",
        "y = wine_df['winetype']\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, random_state=42)\n",
        "\n",
        "print(y[0:10])\n",
        "X_train.head()\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 420
        },
        "id": "JKksCgDoYnQm",
        "outputId": "7ba560b3-ecbf-4f79-f522-05f050e001b8"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0    1\n",
            "1    1\n",
            "2    1\n",
            "3    1\n",
            "4    1\n",
            "5    1\n",
            "6    1\n",
            "7    1\n",
            "8    1\n",
            "9    1\n",
            "Name: winetype, dtype: int64\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "      fixed acidity  volatile acidity  citric acid  residual sugar  chlorides  \\\n",
              "1539            7.2             0.390         0.32             1.8      0.065   \n",
              "1109           10.8             0.470         0.43             2.1      0.171   \n",
              "100             8.3             0.610         0.30             2.1      0.084   \n",
              "3878            6.5             0.350         0.31            10.2      0.069   \n",
              "4817            5.8             0.385         0.25             3.7      0.031   \n",
              "\n",
              "      free sulfur dioxide  total sulfur dioxide  density    pH  sulphates  \\\n",
              "1539                 34.0                  60.0  0.99714  3.46       0.78   \n",
              "1109                 27.0                  66.0  0.99820  3.17       0.76   \n",
              "100                  11.0                  50.0  0.99720  3.40       0.61   \n",
              "3878                 58.0                 170.0  0.99692  3.18       0.49   \n",
              "4817                 38.0                 122.0  0.99128  3.20       0.63   \n",
              "\n",
              "      alcohol  quality  \n",
              "1539      9.9        5  \n",
              "1109     10.8        6  \n",
              "100      10.2        6  \n",
              "3878      9.4        5  \n",
              "4817     11.2        6  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b31f6a99-f84e-4b0b-b6b2-3b5538c5dfa0\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>fixed acidity</th>\n",
              "      <th>volatile acidity</th>\n",
              "      <th>citric acid</th>\n",
              "      <th>residual sugar</th>\n",
              "      <th>chlorides</th>\n",
              "      <th>free sulfur dioxide</th>\n",
              "      <th>total sulfur dioxide</th>\n",
              "      <th>density</th>\n",
              "      <th>pH</th>\n",
              "      <th>sulphates</th>\n",
              "      <th>alcohol</th>\n",
              "      <th>quality</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>1539</th>\n",
              "      <td>7.2</td>\n",
              "      <td>0.390</td>\n",
              "      <td>0.32</td>\n",
              "      <td>1.8</td>\n",
              "      <td>0.065</td>\n",
              "      <td>34.0</td>\n",
              "      <td>60.0</td>\n",
              "      <td>0.99714</td>\n",
              "      <td>3.46</td>\n",
              "      <td>0.78</td>\n",
              "      <td>9.9</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1109</th>\n",
              "      <td>10.8</td>\n",
              "      <td>0.470</td>\n",
              "      <td>0.43</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.171</td>\n",
              "      <td>27.0</td>\n",
              "      <td>66.0</td>\n",
              "      <td>0.99820</td>\n",
              "      <td>3.17</td>\n",
              "      <td>0.76</td>\n",
              "      <td>10.8</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100</th>\n",
              "      <td>8.3</td>\n",
              "      <td>0.610</td>\n",
              "      <td>0.30</td>\n",
              "      <td>2.1</td>\n",
              "      <td>0.084</td>\n",
              "      <td>11.0</td>\n",
              "      <td>50.0</td>\n",
              "      <td>0.99720</td>\n",
              "      <td>3.40</td>\n",
              "      <td>0.61</td>\n",
              "      <td>10.2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3878</th>\n",
              "      <td>6.5</td>\n",
              "      <td>0.350</td>\n",
              "      <td>0.31</td>\n",
              "      <td>10.2</td>\n",
              "      <td>0.069</td>\n",
              "      <td>58.0</td>\n",
              "      <td>170.0</td>\n",
              "      <td>0.99692</td>\n",
              "      <td>3.18</td>\n",
              "      <td>0.49</td>\n",
              "      <td>9.4</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4817</th>\n",
              "      <td>5.8</td>\n",
              "      <td>0.385</td>\n",
              "      <td>0.25</td>\n",
              "      <td>3.7</td>\n",
              "      <td>0.031</td>\n",
              "      <td>38.0</td>\n",
              "      <td>122.0</td>\n",
              "      <td>0.99128</td>\n",
              "      <td>3.20</td>\n",
              "      <td>0.63</td>\n",
              "      <td>11.2</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b31f6a99-f84e-4b0b-b6b2-3b5538c5dfa0')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-b31f6a99-f84e-4b0b-b6b2-3b5538c5dfa0 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-b31f6a99-f84e-4b0b-b6b2-3b5538c5dfa0');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-7d582d61-8b79-4354-8074-26577ec44f6b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7d582d61-8b79-4354-8074-26577ec44f6b')\"\n",
              "            title=\"Suggest charts.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-7d582d61-8b79-4354-8074-26577ec44f6b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ]
          },
          "metadata": {},
          "execution_count": 123
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"Training set X size:\", X_train.shape)\n",
        "print(\"Test set X size:\", X_test.shape)\n",
        "print(\"Training set y size:\", y_train.shape)\n",
        "print(\"Test set y size:\", y_test.shape)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "cXD_ck_3ZZg-",
        "outputId": "0b83835d-a48e-4497-c10d-3f5a8c4fd57f"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Training set X size: (4872, 12)\n",
            "Test set X size: (1625, 12)\n",
            "Training set y size: (4872,)\n",
            "Test set y size: (1625,)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "I use various logistic regression model to predict which one is the most accurate. I will first begin with an ordinary logistic regression model (which I assume will be the less accurate), then penalized models with Lasso followed by Ridge; both of them will have changes in their C parameter, eventually to finish with a Knn model.\n",
        "\n",
        "I chose to begin with regular log, then Ridge because it uses a more moderate model, with squared penalty in shrinking the coefficient but not to zero. Lasso uses absolute penalty, can shrink some coefficients to zero. Lasso is more likely to create a better fit but at the risk of underfit. I won't include a multivariate model given the analysis remains binary.\n"
      ],
      "metadata": {
        "id": "tZ1_x8EsCCDL"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "#### -> Ordinary model"
      ],
      "metadata": {
        "id": "JEzv-OdrSveu"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "logreg = LogisticRegression(penalty='none').fit(X_train, y_train)\n",
        "\n",
        "print(\"logreg .coef_: {}\".format(logreg .coef_))\n",
        "print(\"Training set score: {:.3f}\".format(logreg.score(X_train, y_train)))\n",
        "print(\"Test set score: {:.3f}\".format(logreg.score(X_test, y_test)))\n",
        "\n",
        "predicted_vals = logreg.predict(X_test) # y_pred includes your predictions\n",
        "print(\"logreg.predict: {}\".format(predicted_vals))\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "tGk523VnpsaF",
        "outputId": "61bc4117-c08a-4a95-a30d-10814451385c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logreg .coef_: [[ 0.81472868 15.06517937 -0.54367953 -0.09280006  3.69614451  0.04763454\n",
            "  -0.07622245 -4.56776976  2.4598927  13.43947601 -1.24410084  0.02886431]]\n",
            "Training set score: 0.983\n",
            "Test set score: 0.977\n",
            "logreg.predict: [0 0 0 ... 0 0 0]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1173: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The model does perfom well given a difference of 0.006 between the training and test score, meaning the algorithm could have an easier time identifying white or red wine thanks to the independent features. There is still some degree of overfit; as the next models will attempt to reduce this gap, and make the model almost entirely accurate with a low margin of errors."
      ],
      "metadata": {
        "id": "pmsJ95tgVizG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import statsmodels.api as sm\n",
        "#remember still need to add column of 1's\n",
        "X_train_new = sm.add_constant(X_train)\n",
        "\n",
        "#remember that y is first and then X in statsmodel; Generalized Linear Model and binomial family for Logistic regression\n",
        "model = sm.GLM(y_train, X_train_new, family=sm.families.Binomial()).fit()\n",
        "\n",
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 530
        },
        "id": "HiTEs3R3pWF4",
        "outputId": "b65b0aa3-bc55-481f-b8a9-da2562a825b7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<class 'statsmodels.iolib.summary.Summary'>\n",
              "\"\"\"\n",
              "                 Generalized Linear Model Regression Results                  \n",
              "==============================================================================\n",
              "Dep. Variable:               winetype   No. Observations:                 4872\n",
              "Model:                            GLM   Df Residuals:                     4859\n",
              "Model Family:                Binomial   Df Model:                           12\n",
              "Link Function:                  Logit   Scale:                          1.0000\n",
              "Method:                          IRLS   Log-Likelihood:                -141.15\n",
              "Date:                Sat, 14 Oct 2023   Deviance:                       282.30\n",
              "Time:                        02:49:59   Pearson chi2:                 5.71e+07\n",
              "No. Iterations:                    10   Pseudo R-squ. (CS):             0.6473\n",
              "Covariance Type:            nonrobust                                         \n",
              "========================================================================================\n",
              "                           coef    std err          z      P>|z|      [0.025      0.975]\n",
              "----------------------------------------------------------------------------------------\n",
              "const                -1514.6316    193.685     -7.820      0.000   -1894.248   -1135.015\n",
              "fixed acidity            0.1833      0.269      0.682      0.495      -0.344       0.710\n",
              "volatile acidity         9.8420      1.419      6.935      0.000       7.060      12.624\n",
              "citric acid             -1.9831      1.423     -1.394      0.163      -4.772       0.806\n",
              "residual sugar          -1.0323      0.129     -7.990      0.000      -1.286      -0.779\n",
              "chlorides               23.5216      5.508      4.270      0.000      12.726      34.317\n",
              "free sulfur dioxide      0.0745      0.018      4.209      0.000       0.040       0.109\n",
              "total sulfur dioxide    -0.0569      0.006     -9.152      0.000      -0.069      -0.045\n",
              "density               1504.1743    197.749      7.606      0.000    1116.594    1891.755\n",
              "pH                       0.1282      1.627      0.079      0.937      -3.061       3.317\n",
              "sulphates                4.2486      1.469      2.891      0.004       1.369       7.129\n",
              "alcohol                  1.2658      0.292      4.333      0.000       0.693       1.838\n",
              "quality                  0.3952      0.237      1.671      0.095      -0.068       0.859\n",
              "========================================================================================\n",
              "\"\"\""
            ],
            "text/html": [
              "<table class=\"simpletable\">\n",
              "<caption>Generalized Linear Model Regression Results</caption>\n",
              "<tr>\n",
              "  <th>Dep. Variable:</th>       <td>winetype</td>     <th>  No. Observations:  </th>  <td>  4872</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model:</th>                  <td>GLM</td>       <th>  Df Residuals:      </th>  <td>  4859</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Model Family:</th>        <td>Binomial</td>     <th>  Df Model:          </th>  <td>    12</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Link Function:</th>         <td>Logit</td>      <th>  Scale:             </th> <td>  1.0000</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Method:</th>                <td>IRLS</td>       <th>  Log-Likelihood:    </th> <td> -141.15</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Date:</th>            <td>Sat, 14 Oct 2023</td> <th>  Deviance:          </th> <td>  282.30</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Time:</th>                <td>02:49:59</td>     <th>  Pearson chi2:      </th> <td>5.71e+07</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>No. Iterations:</th>         <td>10</td>        <th>  Pseudo R-squ. (CS):</th>  <td>0.6473</td> \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>Covariance Type:</th>     <td>nonrobust</td>    <th>                     </th>     <td> </td>   \n",
              "</tr>\n",
              "</table>\n",
              "<table class=\"simpletable\">\n",
              "<tr>\n",
              "            <td></td>              <th>coef</th>     <th>std err</th>      <th>z</th>      <th>P>|z|</th>  <th>[0.025</th>    <th>0.975]</th>  \n",
              "</tr>\n",
              "<tr>\n",
              "  <th>const</th>                <td>-1514.6316</td> <td>  193.685</td> <td>   -7.820</td> <td> 0.000</td> <td>-1894.248</td> <td>-1135.015</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>fixed acidity</th>        <td>    0.1833</td> <td>    0.269</td> <td>    0.682</td> <td> 0.495</td> <td>   -0.344</td> <td>    0.710</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>volatile acidity</th>     <td>    9.8420</td> <td>    1.419</td> <td>    6.935</td> <td> 0.000</td> <td>    7.060</td> <td>   12.624</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>citric acid</th>          <td>   -1.9831</td> <td>    1.423</td> <td>   -1.394</td> <td> 0.163</td> <td>   -4.772</td> <td>    0.806</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>residual sugar</th>       <td>   -1.0323</td> <td>    0.129</td> <td>   -7.990</td> <td> 0.000</td> <td>   -1.286</td> <td>   -0.779</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>chlorides</th>            <td>   23.5216</td> <td>    5.508</td> <td>    4.270</td> <td> 0.000</td> <td>   12.726</td> <td>   34.317</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>free sulfur dioxide</th>  <td>    0.0745</td> <td>    0.018</td> <td>    4.209</td> <td> 0.000</td> <td>    0.040</td> <td>    0.109</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>total sulfur dioxide</th> <td>   -0.0569</td> <td>    0.006</td> <td>   -9.152</td> <td> 0.000</td> <td>   -0.069</td> <td>   -0.045</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>density</th>              <td> 1504.1743</td> <td>  197.749</td> <td>    7.606</td> <td> 0.000</td> <td> 1116.594</td> <td> 1891.755</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>pH</th>                   <td>    0.1282</td> <td>    1.627</td> <td>    0.079</td> <td> 0.937</td> <td>   -3.061</td> <td>    3.317</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>sulphates</th>            <td>    4.2486</td> <td>    1.469</td> <td>    2.891</td> <td> 0.004</td> <td>    1.369</td> <td>    7.129</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>alcohol</th>              <td>    1.2658</td> <td>    0.292</td> <td>    4.333</td> <td> 0.000</td> <td>    0.693</td> <td>    1.838</td>\n",
              "</tr>\n",
              "<tr>\n",
              "  <th>quality</th>              <td>    0.3952</td> <td>    0.237</td> <td>    1.671</td> <td> 0.095</td> <td>   -0.068</td> <td>    0.859</td>\n",
              "</tr>\n",
              "</table>"
            ],
            "text/latex": "\\begin{center}\n\\begin{tabular}{lclc}\n\\toprule\n\\textbf{Dep. Variable:}       &     winetype     & \\textbf{  No. Observations:  } &     4872    \\\\\n\\textbf{Model:}               &       GLM        & \\textbf{  Df Residuals:      } &     4859    \\\\\n\\textbf{Model Family:}        &     Binomial     & \\textbf{  Df Model:          } &       12    \\\\\n\\textbf{Link Function:}       &      Logit       & \\textbf{  Scale:             } &    1.0000   \\\\\n\\textbf{Method:}              &       IRLS       & \\textbf{  Log-Likelihood:    } &   -141.15   \\\\\n\\textbf{Date:}                & Sat, 14 Oct 2023 & \\textbf{  Deviance:          } &    282.30   \\\\\n\\textbf{Time:}                &     02:49:59     & \\textbf{  Pearson chi2:      } &  5.71e+07   \\\\\n\\textbf{No. Iterations:}      &        10        & \\textbf{  Pseudo R-squ. (CS):} &   0.6473    \\\\\n\\textbf{Covariance Type:}     &    nonrobust     & \\textbf{                     } &             \\\\\n\\bottomrule\n\\end{tabular}\n\\begin{tabular}{lcccccc}\n                              & \\textbf{coef} & \\textbf{std err} & \\textbf{z} & \\textbf{P$> |$z$|$} & \\textbf{[0.025} & \\textbf{0.975]}  \\\\\n\\midrule\n\\textbf{const}                &   -1514.6316  &      193.685     &    -7.820  &         0.000        &    -1894.248    &    -1135.015     \\\\\n\\textbf{fixed acidity}        &       0.1833  &        0.269     &     0.682  &         0.495        &       -0.344    &        0.710     \\\\\n\\textbf{volatile acidity}     &       9.8420  &        1.419     &     6.935  &         0.000        &        7.060    &       12.624     \\\\\n\\textbf{citric acid}          &      -1.9831  &        1.423     &    -1.394  &         0.163        &       -4.772    &        0.806     \\\\\n\\textbf{residual sugar}       &      -1.0323  &        0.129     &    -7.990  &         0.000        &       -1.286    &       -0.779     \\\\\n\\textbf{chlorides}            &      23.5216  &        5.508     &     4.270  &         0.000        &       12.726    &       34.317     \\\\\n\\textbf{free sulfur dioxide}  &       0.0745  &        0.018     &     4.209  &         0.000        &        0.040    &        0.109     \\\\\n\\textbf{total sulfur dioxide} &      -0.0569  &        0.006     &    -9.152  &         0.000        &       -0.069    &       -0.045     \\\\\n\\textbf{density}              &    1504.1743  &      197.749     &     7.606  &         0.000        &     1116.594    &     1891.755     \\\\\n\\textbf{pH}                   &       0.1282  &        1.627     &     0.079  &         0.937        &       -3.061    &        3.317     \\\\\n\\textbf{sulphates}            &       4.2486  &        1.469     &     2.891  &         0.004        &        1.369    &        7.129     \\\\\n\\textbf{alcohol}              &       1.2658  &        0.292     &     4.333  &         0.000        &        0.693    &        1.838     \\\\\n\\textbf{quality}              &       0.3952  &        0.237     &     1.671  &         0.095        &       -0.068    &        0.859     \\\\\n\\bottomrule\n\\end{tabular}\n%\\caption{Generalized Linear Model Regression Results}\n\\end{center}"
          },
          "metadata": {},
          "execution_count": 126
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now, let's include a penalty to reduce the impact of the independent features defining the type of dependent wine (there is too many attributes which constrain the ability of the model to predict whichever wine is red/white as they require to be dampened => Ridge using two set of C1 parameters)"
      ],
      "metadata": {
        "id": "VEPfTJbvS8_5"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Smaller C will constrain Betas more.  It's a tuning parameter we can find using gridsearch.\n",
        "# Lowering C will make coefficients larger, larger C will make coefficients smaller\n",
        "# Note: L2 will shrink coefficients down, never reaching 0. L1 has potential to zero out coefficients\n",
        "\n",
        "#C=1, compare coefs to regular model above.\n",
        "logreg = LogisticRegression(C=100, penalty='l2').fit(X_train, y_train)\n",
        "\n",
        "print(\"logreg .coef_: {}\".format(logreg .coef_))\n",
        "print(\"Training set score: {:.3f}\".format(logreg.score(X_train, y_train)))\n",
        "print(\"Test set score: {:.3f}\".format(logreg.score(X_test, y_test)))\n",
        "\n",
        "\n",
        "predicted_vals = logreg.predict(X_test) # y_pred includes your predictions\n",
        "print(\"logreg.predict: {}\".format(predicted_vals))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3FiiWTW3DBk6",
        "outputId": "c3dad1a5-e0eb-4198-acb7-a4574a1f70b7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logreg .coef_: [[ 0.85290124 14.00887116 -2.32681912 -0.20217936  2.33870788  0.06192623\n",
            "  -0.07596205 -2.79041972  1.0209736  11.66035358 -1.04100095  0.12889915]]\n",
            "Training set score: 0.982\n",
            "Test set score: 0.976\n",
            "logreg.predict: [0 0 0 ... 0 0 0]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Same score difference albeilt with higher log coefficient. Not too much of an improvement"
      ],
      "metadata": {
        "id": "JSyo8U8WWPg8"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "logreg = LogisticRegression(C=0.01, penalty='l2').fit(X_train, y_train)\n",
        "print(\"logreg .coef_: {}\".format(logreg .coef_))\n",
        "print(\"Training set score: {:.3f}\".format(logreg.score(X_train, y_train)))\n",
        "print(\"Test set score: {:.3f}\".format(logreg.score(X_test, y_test)))\n",
        "\n",
        "predicted_vals = logreg.predict(X_test)\n",
        "print(\"logreg.predict: {}\".format(predicted_vals))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "OaXXgSozDM_e",
        "outputId": "d14048fc-8d04-4528-9caa-a356b943feb0"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logreg .coef_: [[ 0.61114401  0.53565523 -0.13522601 -0.13793851  0.08016586  0.03526499\n",
            "  -0.06290453  0.00346936  0.39841701  0.37051827 -0.47506654 -0.16588455]]\n",
            "Training set score: 0.950\n",
            "Test set score: 0.940\n",
            "logreg.predict: [0 0 0 ... 0 0 0]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
            "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
            "\n",
            "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
            "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
            "Please also refer to the documentation for alternative solver options:\n",
            "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
            "  n_iter_i = _check_optimize_result(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###### The Logistic model with a lower C parameter is more overfitting, performs worse on the sets and has a harder time predicting the type of wine given smaller log coefficients. Not the best model."
      ],
      "metadata": {
        "id": "AtGgEvA3Iups"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "###### -> Let's move on to Lasso model (l1)"
      ],
      "metadata": {
        "id": "1a0t3gO9KcF7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "logreg = LogisticRegression(C=.01, penalty='l1',solver='liblinear').fit(X_train, y_train)\n",
        "\n",
        "print(\"logreg .coef_: {}\".format(logreg .coef_))\n",
        "print(\"Training set score: {:.3f}\".format(logreg.score(X_train, y_train)))\n",
        "print(\"Test set score: {:.3f}\".format(logreg.score(X_test, y_test)))\n",
        "\n",
        "predicted_vals = logreg.predict_proba(X_test) # y_pred includes your predictions\n",
        "print(\"logreg.predict: {}\".format(predicted_vals))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_FKLM8w4JS83",
        "outputId": "5ad98dd1-3e0c-4739-b35f-8304fabd1d2e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logreg .coef_: [[ 0.73350823  0.          0.         -0.08549753  0.          0.02625529\n",
            "  -0.06077305  0.          0.          0.         -0.1355836   0.        ]]\n",
            "Training set score: 0.943\n",
            "Test set score: 0.932\n",
            "logreg.predict: [[9.90446114e-01 9.55388566e-03]\n",
            " [9.57912458e-01 4.20875423e-02]\n",
            " [9.87344698e-01 1.26553017e-02]\n",
            " ...\n",
            " [9.99744954e-01 2.55045648e-04]\n",
            " [9.98803951e-01 1.19604856e-03]\n",
            " [9.86502021e-01 1.34979791e-02]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "###### Compared to the regular C1=0.01 model, Lasso increased the coefficient by 10 points but with a  worse performance on the training/test score. However, the features prediction have shrunk so much that their impact is much more moderate, rendering the model less accurate"
      ],
      "metadata": {
        "id": "wUpqRbZmMmD1"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "logreg = LogisticRegression(C=100, penalty='l1',solver='liblinear').fit(X_train, y_train)\n",
        "\n",
        "print(\"logreg .coef_: {}\".format(logreg .coef_))\n",
        "print(\"Training set score: {:.3f}\".format(logreg.score(X_train, y_train)))\n",
        "print(\"Test set score: {:.3f}\".format(logreg.score(X_test, y_test)))\n",
        "\n",
        "predicted_vals = logreg.predict_proba(X_test) # y_pred includes your predictions\n",
        "print(\"logreg.predict: {}\".format(predicted_vals))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "zDtQJk_bMkhI",
        "outputId": "8f80784a-cb87-4072-f8de-c9118b81178b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logreg .coef_: [[  1.34651898  12.55249905  -1.19199212  -0.13488743  33.01996549\n",
            "    0.06324144  -0.06905075 -16.06990578   7.19981506   9.38220608\n",
            "   -0.50930607   0.05376467]]\n",
            "Training set score: 0.989\n",
            "Test set score: 0.987\n",
            "logreg.predict: [[9.99989646e-01 1.03540883e-05]\n",
            " [4.44909199e-01 5.55090801e-01]\n",
            " [9.99707189e-01 2.92811425e-04]\n",
            " ...\n",
            " [9.99956295e-01 4.37052654e-05]\n",
            " [9.86472005e-01 1.35279948e-02]\n",
            " [9.99967274e-01 3.27258843e-05]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Lasso is more efficient using a C1 parameter with a higher value; perhaps because regularization is weaker which causes less shrinking in the features values, so much more degree of accuracy. Yet in the case of C=100 with l1 the model attempt to shrink the coefficients to 0 which it cannot, rendering the features to have a stronger effect on the dependent variable regression. With a difference of 0.003, this model performs exceptionally well compared to the others as it manages to better capture the new data through generalization; whereas the others would overfit the model with more information.\n",
        "\n",
        "#### So far, this seems to be most efficient model."
      ],
      "metadata": {
        "id": "kx7K69aHT-Pr"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Time to use Knn now. This is different from the previous model as Knn use dataset distance score between the training variables instaed of an attriubte analysis. This could makes the model less accurate in a larger dataset. For simplicity, I will use 10 neighboors.  "
      ],
      "metadata": {
        "id": "-J1o3XyXYGPn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.neighbors import KNeighborsClassifier\n",
        "\n",
        "knn = KNeighborsClassifier(n_neighbors=10)\n",
        "knn.fit(X_train, y_train)\n",
        "\n",
        "#Print accuracy rounded to two digits to the right of decimal\n",
        "print(knn.score(X_test, y_test))\n",
        "y_pred = knn.predict(X_test)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KsYFNpR1ZawI",
        "outputId": "ffca4156-cfc4-4076-c4c7-e8a1084b4800"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "0.9347692307692308\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Model accuracy is 93.4%"
      ],
      "metadata": {
        "id": "u7sYaMRbZGq7"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "y_pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "CHhxPsnZeANv",
        "outputId": "39288ab6-374e-4f4c-bf44-60ec879c269d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([0, 0, 0, ..., 0, 0, 0])"
            ]
          },
          "metadata": {},
          "execution_count": 64
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#import cross validation functions from sk learn\n",
        "\n",
        "from sklearn.model_selection import cross_val_score\n",
        "from sklearn.model_selection import RepeatedKFold\n",
        "from sklearn.model_selection import StratifiedKFold\n",
        "from sklearn.model_selection import KFold\n",
        "\n",
        "# Set up function parameters for diff't cross validation strategies\n",
        "kfold = KFold(n_splits=5)\n",
        "skfold = StratifiedKFold(n_splits=5, shuffle=True)\n",
        "rkf = RepeatedKFold(n_splits=5, n_repeats=10)\n",
        "\n",
        "print(\"KFold: \"+str(cross_val_score(KNeighborsClassifier(n_neighbors=10), X_train, y_train, cv=kfold).mean()))\n",
        "\n",
        "print(\"StratifiedKFold:\\n{}\".format(\n",
        "cross_val_score(KNeighborsClassifier(n_neighbors=5), X_train, y_train, cv=skfold).mean()))\n",
        "\n",
        "print(\"RepeatedKFold:\\n{}\".format(\n",
        "cross_val_score(KNeighborsClassifier(n_neighbors=5), X_train, y_train,  cv=rkf).mean()))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "KH0fgHPcoh8z",
        "outputId": "ce19f80f-d9ba-42d8-f291-6066885d12ad"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "KFold: 0.9419129152845785\n",
            "StratifiedKFold:\n",
            "0.9376016427104723\n",
            "RepeatedKFold:\n",
            "0.9389155583636078\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The model is now more accurate by using 5 neighboors. The model seem to be resilient in capturing random noises, succesfully providing a good accuracy in evaluating wine type (alos capturing new data related to wine). With an average of 94%, the model is strong and promising but stills performs less than the Lasso C1=100 model."
      ],
      "metadata": {
        "id": "46F1RByRaYRZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Now Let's test using standard scale on normal logistic regression, l1 with c=100 and kFold."
      ],
      "metadata": {
        "id": "-RFIVWie6MeG"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.linear_model import LogisticRegression\n",
        "from sklearn import preprocessing\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y)\n",
        "\n",
        "scaler = preprocessing.StandardScaler().fit(X_train)\n",
        "\n",
        "X_train_scaled = scaler.transform(X_train)\n",
        "scaler.transform(X_train)\n",
        "X_test_scaled = scaler.transform(X_test)\n",
        "logreg.score(X_test_scaled, y_test)\n",
        "\n",
        "logreg = LogisticRegression(penalty='none').fit(X_train_scaled, y_train)\n",
        "\n",
        "print(\"logreg .coef_: {}\".format(logreg .coef_))\n",
        "print(\"Training set score: {:.3f}\".format(logreg.score(X_train_scaled, y_train)))\n",
        "print(\"Test set score: {:.3f}\".format(logreg.score(X_test_scaled, y_test)))\n",
        "\n",
        "predicted_vals = logreg.predict(X_test_scaled) # y_pred includes your predictions\n",
        "print(\"logreg.predict: {}\".format(predicted_vals))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HG3qmgBZdlR-",
        "outputId": "b3b5930b-1ca0-412b-8125-f62df15bb613"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logreg .coef_: [[-1.17238412  0.92853879 -0.31302323 -4.63954316  0.86716215  0.84180599\n",
            "  -2.94856624  7.20743265 -0.48527065  0.30395503  2.99133533  0.42107033]]\n",
            "Training set score: 0.995\n",
            "Test set score: 0.993\n",
            "logreg.predict: [0 1 0 ... 0 0 1]\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.10/dist-packages/sklearn/base.py:439: UserWarning: X does not have valid feature names, but LogisticRegression was fitted with feature names\n",
            "  warnings.warn(\n",
            "/usr/local/lib/python3.10/dist-packages/sklearn/linear_model/_logistic.py:1173: FutureWarning: `penalty='none'`has been deprecated in 1.2 and will be removed in 1.4. To keep the past behaviour, set `penalty=None`.\n",
            "  warnings.warn(\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "X_train, X_test, y_train, y_test = train_test_split(X, y)\n",
        "\n",
        "scaler = preprocessing.StandardScaler().fit(X_train)\n",
        "\n",
        "X_train_scaled = scaler.transform(X_train)\n",
        "scaler.transform(X_train)\n",
        "logreg = LogisticRegression(C=100, penalty='l1',solver='liblinear').fit(X_train_scaled, y_train)\n",
        "\n",
        "X_test_scaled = scaler.transform(X_test)\n",
        "logreg.score(X_test_scaled, y_test)\n",
        "\n",
        "print(\"logreg .coef_: {}\".format(logreg .coef_))\n",
        "print(\"Training set score: {:.3f}\".format(logreg.score(X_train_scaled, y_train)))\n",
        "print(\"Test set score: {:.3f}\".format(logreg.score(X_test_scaled, y_test)))\n",
        "\n",
        "predicted_vals = logreg.predict_proba(X_test_scaled) # y_pred includes your predictions\n",
        "print(\"logreg.predict: {}\".format(predicted_vals))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "FX5uCJcd6svH",
        "outputId": "74d55ddf-a414-4fe4-80f1-1a96bfa937f7"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "logreg .coef_: [[-0.22077653  1.25528515 -0.41799343 -4.75634128  0.76504915  1.26329919\n",
            "  -2.86588966  5.24346916 -0.23744869  0.40014101  2.09778002  0.27639645]]\n",
            "Training set score: 0.995\n",
            "Test set score: 0.994\n",
            "logreg.predict: [[9.99077376e-01 9.22623680e-04]\n",
            " [9.98412406e-01 1.58759420e-03]\n",
            " [9.99996272e-01 3.72782019e-06]\n",
            " ...\n",
            " [9.97394605e-01 2.60539535e-03]\n",
            " [9.99940485e-01 5.95146138e-05]\n",
            " [9.99995369e-01 4.63118883e-06]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y)\n",
        "\n",
        "scaler = preprocessing.StandardScaler().fit(X_train)\n",
        "\n",
        "X_train_scaled = scaler.transform(X_train)\n",
        "scaler.transform(X_train)\n",
        "\n",
        "\n",
        "kfold = KFold(n_splits=5)\n",
        "skfold = StratifiedKFold(n_splits=5, shuffle=True)\n",
        "rkf = RepeatedKFold(n_splits=5, n_repeats=10)\n",
        "\n",
        "print(\"KFold: \"+str(cross_val_score(KNeighborsClassifier(n_neighbors=10), X_train_scaled, y_train, cv=kfold).mean()))\n",
        "\n",
        "print(\"StratifiedKFold:\\n{}\".format(\n",
        "cross_val_score(KNeighborsClassifier(n_neighbors=5), X_train_scaled, y_train, cv=skfold).mean()))\n",
        "\n",
        "print(\"RepeatedKFold:\\n{}\".format(\n",
        "cross_val_score(KNeighborsClassifier(n_neighbors=5), X_train_scaled, y_train,  cv=rkf).mean()))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "qBCHfdoF-ctk",
        "outputId": "de167cf0-2c98-49bd-bbb7-5b7047d92876"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "KFold: 0.9938427841836465\n",
            "StratifiedKFold:\n",
            "0.9938434159953667\n",
            "RepeatedKFold:\n",
            "0.9938217027325859\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Lasso with C1=100 remains the most accurate with a test score between 0.994 to 0.998, closely followed by stratiffied Knn with a score of 0.9938. Notice that Lasso can be object to underfit as its test score can be some cases higher than the training score."
      ],
      "metadata": {
        "id": "iU3-izsJXxtR"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "\n",
        "### 2.3 Tune the parameters where possible using GridSearchCV. Do the results improve?\n"
      ],
      "metadata": {
        "id": "lTmnE0mDc7uA"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "First, I implement an odd numbers array beginning with 1 and finishing with 13, taking two steps. I voluntarily finished with 15 to keep the list with odd numbers."
      ],
      "metadata": {
        "id": "bHd4TCIadSH6"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "\n",
        "np.arange(1, 15, 2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gG1lLXybdCYf",
        "outputId": "abf64c9c-7241-4985-e987-43b6d195ba5d"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([ 1,  3,  5,  7,  9, 11, 13])"
            ]
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Then, I use this array on my Knn model to better capture the strenght of the hyperparameters in affecting the relationship between the k = 13 neighboors in the dataset. I'll train the model 20 times to maximizes its efficiency."
      ],
      "metadata": {
        "id": "Wfzp337PdmUw"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import GridSearchCV\n",
        "import numpy as np\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y)\n",
        "\n",
        "#create dictionary data object with keys equal to parameter name 'n_neighbors'\n",
        "#for knn model and values equal to range of k values to create models for\n",
        "\n",
        "param_grid = {'n_neighbors': [1,3,5,7,9,10,11,13] }#np.arange creates sequence of numbers for each k value\n",
        "\n",
        "grid = GridSearchCV(KNeighborsClassifier(), param_grid=param_grid, cv=20)\n",
        "\n",
        "#use meta model methods to fit score and predict model:\n",
        "grid.fit(X_train, y_train)\n",
        "\n",
        "#extract best score and parameter by calling objects \"best_score_\" and \"best_params_\"\n",
        "print(\"best mean cross-validation score: {:.3f}\".format(grid.best_score_))\n",
        "print(\"best parameters: {}\".format(grid.best_params_))\n",
        "print(\"test-set score: {:.3f}\".format(grid.score(X_test, y_test)))\n"
      ],
      "metadata": {
        "id": "3OV7NC7VeR4c",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1ac6aada-02a1-48eb-ccb9-733bc5b484a9"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best mean cross-validation score: 0.944\n",
            "best parameters: {'n_neighbors': 1}\n",
            "test-set score: 0.953\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Test score is of 0.942 which is solid and accurate given how close it is to the previous cross-validation score of 0.9419. The best parameter is for 1 neighboor which is a good sign as the model is able to capture noisey signals, able to differentiate each attributes differently and to identify new neighboors in the model. In other words, the machine is learning efficiently and proves to be resilient given the high accuracy score with 20 attempts. It still remains less predictive than the Lasso, but present less risk of overfit."
      ],
      "metadata": {
        "id": "VSeGYN1FeqZF"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "Let's try with Lasso using GridSearch, with multiple C values."
      ],
      "metadata": {
        "id": "eV2TznXwtSrp"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import GridSearchCV\n",
        "from sklearn.linear_model import LogisticRegression\n",
        "\n",
        "\n",
        "logreg = LogisticRegression(penalty='l1', solver='liblinear')\n",
        "param_grid = {\n",
        "    'C': [0.001, 0.01, 0.1, 1, 10, 100],\n",
        "}\n",
        "\n",
        "grid = GridSearchCV(logreg, param_grid=param_grid, cv=20)\n",
        "grid.fit(X_train, y_train)\n",
        "\n",
        "# Display results\n",
        "print(\"best mean cross-validation score: {:.3f}\".format(grid.best_score_))\n",
        "print(\"best parameters: {}\".format(grid.best_params_))\n",
        "print(\"test-set score: {:.3f}\".format(grid.score(X_test, y_test)))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "w1BoqXSxtVpL",
        "outputId": "130db72b-7cd6-4201-8415-01105a9e1b2b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best mean cross-validation score: 0.987\n",
            "best parameters: {'C': 10}\n",
            "test-set score: 0.989\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Lasso performs much better than stratified Knn with a best paramter of C=100. The risk of underfit disapears as the alpha value gets higher."
      ],
      "metadata": {
        "id": "sPekulUqu5OZ"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### 2.4 Change the cross-validation strategy in GridSearchCV from ‘stratified k-fold’ to ‘kfold’ with shuffling. Do the parameters for models that can be tuned change? Or if you change the random state of the split into training and test data"
      ],
      "metadata": {
        "id": "6ugGp4G_fjEs"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.model_selection import GridSearchCV, KFold\n",
        "import numpy as np\n",
        "\n",
        "X_train, X_test, y_train, y_test = train_test_split(X, y, stratify=y)\n",
        "\n",
        "# Create dictionary data object with keys equal to parameter name 'n_neighbors'\n",
        "# for knn model and values equal to range of k values to create models for\n",
        "param_grid = {'n_neighbors': [1,3,5,7,9,10,11,13]}\n",
        "\n",
        "# Set up KFold cross-validation strategy with shuffling\n",
        "kfold = KFold(n_splits=20, shuffle=True, random_state=None)\n",
        "\n",
        "grid = GridSearchCV(KNeighborsClassifier(), param_grid=param_grid, cv=kfold)\n",
        "\n",
        "# Use meta model methods to fit score and predict model\n",
        "grid.fit(X_train, y_train)\n",
        "\n",
        "# Extract best score and parameter\n",
        "print(\"best mean cross-validation score: {:.3f}\".format(grid.best_score_))\n",
        "print(\"best parameters: {}\".format(grid.best_params_))\n",
        "print(\"test-set score: {:.3f}\".format(grid.score(X_test, y_test)))\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "DGsu2X2xfzA6",
        "outputId": "0d99c578-62c8-499a-c0ee-eeaefc4dd6ee"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "best mean cross-validation score: 0.953\n",
            "best parameters: {'n_neighbors': 1}\n",
            "test-set score: 0.938\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "The optimal hyperparameters change depending on several factors, including the cross-validation strategy and the specific train-test split determined by the random_state as shown above. The best average score remains consistent with the previous analysis with a difference of 0.005 indicating the parameters are consistent within the Knn model. The test score change is smaller with 0.006, showing that changing the random state to train_test_split could lead to higher variations than with the use of new parameters added to the model at the risk of increasing the model accuracy by 0.010 points. Again, this analysis remains consistent with the previous model showing that the best parameter is always 1 neighboor; affirming that changing the distance between the neighboors in the training data will affect more the model than than changing their attributes (=>parameters). Finally, hyperparameters are the most resilient to changes in the model given the k optimal score of 1; as the machine is able to identify all the underlying, hidden structures in the dataset. The main worries come from adding wines with less specication such as Rosé or Orange, which would be very distant from red/white wine attributes as identified by the model."
      ],
      "metadata": {
        "id": "5RDTEQqCga0j"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "2.5 Lastly, discuss which final model you would choose to predict new data."
      ],
      "metadata": {
        "id": "5SvOjJe0jppO"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "I believe Lasso with C1=100 is the most efficient (with GridSearch) for multiple reasons\n",
        "  1) is the most accurate: With a score of 98.6%, it is the most accurate in predicting the type of wine given the independent variables. 2) Is the most stable, given its accuracy score remains consistent and high after scalling its parameters and the data with different methods. 3) It can captures hypersensitivity thanks to its alpha parameter. 4) The main issue was underfit, but it has been fixed with GridSearch\n",
        "  On the long-run, the stratified knn is also adequate but more prone to variations than Lasso. So I stick with Lasso."
      ],
      "metadata": {
        "id": "g_xALpU7rlcO"
      }
    }
  ]
}